{"ast":null,"code":"var _jsxFileName = \"C:\\\\OtpishiAI\\\\src\\\\components\\\\product\\\\products\\\\productForm\\\\ProductForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport ProductFilter from './ProductFilter';\nimport ProductFilters from './ProductFilters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    queryObj,\n    fetchProducts,\n    renderItems\n  } = _ref;\n  const onChangeHandler = useCallback((filter_id, value) => {\n    let updatedQuery = { ...queryObj\n    };\n\n    switch (filter_id) {\n      case 'genre_major':\n        updatedQuery.genre_major = value;\n        updatedQuery.genre_minor = '';\n        updatedQuery.genre = '';\n        break;\n\n      case 'genre_minor':\n        updatedQuery.genre_minor = value;\n        updatedQuery.genre = `${updatedQuery.genre_major}0${value}`;\n        break;\n\n      case 'genre':\n      case 'brand':\n      case 'category':\n        updatedQuery[filter_id] = value;\n        break;\n    }\n\n    fetchProducts(filter_id, value);\n  }, [queryObj, fetchProducts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderItems.map(renderItem => {\n      var _renderItem$items;\n\n      return ((_renderItem$items = renderItem.items) === null || _renderItem$items === void 0 ? void 0 : _renderItem$items.length) <= 1 ? /*#__PURE__*/_jsxDEV(ProductFilter, {\n        id: renderItem.id,\n        queryObj: queryObj,\n        items: renderItem.items,\n        onChange: onChangeHandler\n      }, renderItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ProductFilters, {\n        id: renderItem.id,\n        queryObj: queryObj,\n        items: renderItem.items,\n        onChange: onChangeHandler\n      }, renderItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}, \"nb1oNjTEBVZQBubKEEmAvJhsCd0=\")), \"nb1oNjTEBVZQBubKEEmAvJhsCd0=\");\n\n_c2 = ProductForm;\nexport default ProductForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductForm$React.memo\");\n$RefreshReg$(_c2, \"ProductForm\");","map":{"version":3,"names":["React","useCallback","ProductFilter","ProductFilters","ProductForm","memo","queryObj","fetchProducts","renderItems","onChangeHandler","filter_id","value","updatedQuery","genre_major","genre_minor","genre","map","renderItem","items","length","id"],"sources":["C:/OtpishiAI/src/components/product/products/productForm/ProductForm.jsx"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport ProductFilter from './ProductFilter';\r\nimport ProductFilters from './ProductFilters';\r\n\r\nconst ProductForm = React.memo(({ queryObj, fetchProducts, renderItems }) => {\r\n  const onChangeHandler = useCallback((filter_id, value) => {\r\n    let updatedQuery = { ...queryObj };\r\n    switch (filter_id) {\r\n      case 'genre_major':\r\n        updatedQuery.genre_major = value;\r\n        updatedQuery.genre_minor = '';\r\n        updatedQuery.genre = '';\r\n        break;\r\n      case 'genre_minor':\r\n        updatedQuery.genre_minor = value;\r\n        updatedQuery.genre = `${updatedQuery.genre_major}0${value}`;\r\n        break;\r\n      case 'genre':\r\n      case 'brand':\r\n      case 'category':\r\n        updatedQuery[filter_id] = value;\r\n        break;\r\n    }\r\n    fetchProducts(filter_id, value);\r\n  }, [queryObj, fetchProducts]);\r\n\r\n  return (\r\n    <>\r\n      {renderItems.map((renderItem) =>\r\n        renderItem.items?.length <= 1 ? (\r\n          <ProductFilter \r\n            id={renderItem.id} \r\n            key={renderItem.id} \r\n            queryObj={queryObj} \r\n            items={renderItem.items} \r\n            onChange={onChangeHandler} \r\n          />\r\n        ) : (\r\n          <ProductFilters \r\n            id={renderItem.id} \r\n            key={renderItem.id} \r\n            queryObj={queryObj} \r\n            items={renderItem.items} \r\n            onChange={onChangeHandler} \r\n          />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ProductForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,WAAW,iCAAGJ,KAAK,CAACK,IAAN,SAAW,QAA8C;EAAA;;EAAA,IAA7C;IAAEC,QAAF;IAAYC,aAAZ;IAA2BC;EAA3B,CAA6C;EAC3E,MAAMC,eAAe,GAAGR,WAAW,CAAC,CAACS,SAAD,EAAYC,KAAZ,KAAsB;IACxD,IAAIC,YAAY,GAAG,EAAE,GAAGN;IAAL,CAAnB;;IACA,QAAQI,SAAR;MACE,KAAK,aAAL;QACEE,YAAY,CAACC,WAAb,GAA2BF,KAA3B;QACAC,YAAY,CAACE,WAAb,GAA2B,EAA3B;QACAF,YAAY,CAACG,KAAb,GAAqB,EAArB;QACA;;MACF,KAAK,aAAL;QACEH,YAAY,CAACE,WAAb,GAA2BH,KAA3B;QACAC,YAAY,CAACG,KAAb,GAAsB,GAAEH,YAAY,CAACC,WAAY,IAAGF,KAAM,EAA1D;QACA;;MACF,KAAK,OAAL;MACA,KAAK,OAAL;MACA,KAAK,UAAL;QACEC,YAAY,CAACF,SAAD,CAAZ,GAA0BC,KAA1B;QACA;IAdJ;;IAgBAJ,aAAa,CAACG,SAAD,EAAYC,KAAZ,CAAb;EACD,CAnBkC,EAmBhC,CAACL,QAAD,EAAWC,aAAX,CAnBgC,CAAnC;EAqBA,oBACE;IAAA,UACGC,WAAW,CAACQ,GAAZ,CAAiBC,UAAD;MAAA;;MAAA,OACf,sBAAAA,UAAU,CAACC,KAAX,wEAAkBC,MAAlB,KAA4B,CAA5B,gBACE,QAAC,aAAD;QACE,EAAE,EAAEF,UAAU,CAACG,EADjB;QAGE,QAAQ,EAAEd,QAHZ;QAIE,KAAK,EAAEW,UAAU,CAACC,KAJpB;QAKE,QAAQ,EAAET;MALZ,GAEOQ,UAAU,CAACG,EAFlB;QAAA;QAAA;QAAA;MAAA,QADF,gBASE,QAAC,cAAD;QACE,EAAE,EAAEH,UAAU,CAACG,EADjB;QAGE,QAAQ,EAAEd,QAHZ;QAIE,KAAK,EAAEW,UAAU,CAACC,KAJpB;QAKE,QAAQ,EAAET;MALZ,GAEOQ,UAAU,CAACG,EAFlB;QAAA;QAAA;QAAA;MAAA,QAVa;IAAA,CAAhB;EADH,iBADF;AAuBD,CA7CmB,kCAAH,iCAAjB;;MAAMhB,W;AA+CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}