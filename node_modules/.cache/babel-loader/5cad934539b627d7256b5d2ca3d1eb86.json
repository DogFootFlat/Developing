{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"pathHasPrefix\", {\n  enumerable: true,\n  get: function () {\n    return pathHasPrefix;\n  }\n});\n\nconst _parsepath = require(\"./parse-path\");\n\nfunction pathHasPrefix(path, prefix) {\n  if (typeof path !== 'string') {\n    return false;\n  }\n\n  const {\n    pathname\n  } = (0, _parsepath.parsePath)(path);\n  return pathname === prefix || pathname.startsWith(prefix + '/');\n}","map":{"version":3,"mappings":";;;;;+BASgBA;kBAAAA;;WAAAA;;AAAAA;;2BATU;;AASnB,SAASA,aAAT,CAAuBC,IAAvB,EAAqCC,MAArC,EAAmD;EACxD,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO,KAAP;EACF;;EAEA,MAAM;IAAEE;EAAF,IAAeC,0BAAUH,IAAVG,CAArB;EACA,OAAOD,aAAaD,MAAbC,IAAuBA,SAASE,UAATF,CAAoBD,SAAS,GAA7BC,CAA9B;AACF","names":["pathHasPrefix","path","prefix","pathname","parsePath","startsWith"],"sources":["C:\\OtpishiAI\\node_modules\\next\\src\\shared\\lib\\router\\utils\\path-has-prefix.ts"],"sourcesContent":["import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n"]},"metadata":{},"sourceType":"script"}