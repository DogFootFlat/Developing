{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getSelector\"],\n      _excluded2 = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\n\nfunction prepareCssVars(theme) {\n  let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  let {\n    getSelector\n  } = _ref,\n      parserConfig = _objectWithoutPropertiesLoose(_ref, _excluded); // @ts-ignore - ignore components do not exist\n\n\n  const {\n    colorSchemes = {},\n    defaultColorScheme = 'light'\n  } = theme,\n        otherTheme = _objectWithoutPropertiesLoose(theme, _excluded2);\n\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n\n  const {\n    [defaultColorScheme]: defaultScheme\n  } = colorSchemes,\n        otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n\n  Object.entries(otherColorSchemes || {}).forEach(_ref2 => {\n    let [key, scheme] = _ref2;\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n\n  if (defaultScheme) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(defaultScheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n\n  const generateThemeVars = () => {\n    let vars = _extends({}, rootVars);\n\n    Object.entries(colorSchemesMap).forEach(_ref3 => {\n      let [, {\n        vars: schemeVars\n      }] = _ref3;\n      vars = deepmerge(vars, schemeVars);\n    });\n    return vars;\n  };\n\n  const generateStyleSheets = () => {\n    const stylesheets = [];\n    const colorScheme = theme.defaultColorScheme || 'light';\n\n    function insertStyleSheet(selector, css) {\n      if (Object.keys(css).length) {\n        stylesheets.push(typeof selector === 'string' ? {\n          [selector]: _extends({}, css)\n        } : selector);\n      }\n    }\n\n    insertStyleSheet(getSelector?.(undefined, _extends({}, rootCss)) || ':root', rootCss);\n\n    const {\n      [colorScheme]: defaultSchemeVal\n    } = colorSchemesMap,\n          rest = _objectWithoutPropertiesLoose(colorSchemesMap, [colorScheme].map(_toPropertyKey));\n\n    if (defaultSchemeVal) {\n      // default color scheme has to come before other color schemes\n      const {\n        css\n      } = defaultSchemeVal;\n      insertStyleSheet(getSelector?.(colorScheme, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${colorScheme}\"]`, css);\n    }\n\n    Object.entries(rest).forEach(_ref4 => {\n      let [key, {\n        css\n      }] = _ref4;\n      insertStyleSheet(getSelector?.(key, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${key}\"]`, css);\n    });\n    return stylesheets;\n  };\n\n  return {\n    vars: themeVars,\n    generateThemeVars,\n    generateStyleSheets\n  };\n}\n\nexport default prepareCssVars;","map":{"version":3,"names":["_extends","_toPropertyKey","_objectWithoutPropertiesLoose","_excluded","_excluded2","deepmerge","cssVarsParser","prepareCssVars","theme","_ref","getSelector","parserConfig","colorSchemes","defaultColorScheme","otherTheme","vars","rootVars","css","rootCss","varsWithDefaults","rootVarsWithDefaults","themeVars","colorSchemesMap","defaultScheme","otherColorSchemes","map","Object","entries","forEach","key","scheme","generateThemeVars","schemeVars","generateStyleSheets","stylesheets","colorScheme","insertStyleSheet","selector","keys","length","push","undefined","defaultSchemeVal","rest","attribute"],"sources":["C:/OtpishiAI/node_modules/@mui/joy/node_modules/@mui/system/cssVars/prepareCssVars.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getSelector\"],\n  _excluded2 = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, _ref = {}) {\n  let {\n      getSelector\n    } = _ref,\n    parserConfig = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded2);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: defaultScheme\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (defaultScheme) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(defaultScheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateThemeVars = () => {\n    let vars = _extends({}, rootVars);\n    Object.entries(colorSchemesMap).forEach(([, {\n      vars: schemeVars\n    }]) => {\n      vars = deepmerge(vars, schemeVars);\n    });\n    return vars;\n  };\n  const generateStyleSheets = () => {\n    const stylesheets = [];\n    const colorScheme = theme.defaultColorScheme || 'light';\n    function insertStyleSheet(selector, css) {\n      if (Object.keys(css).length) {\n        stylesheets.push(typeof selector === 'string' ? {\n          [selector]: _extends({}, css)\n        } : selector);\n      }\n    }\n    insertStyleSheet(getSelector?.(undefined, _extends({}, rootCss)) || ':root', rootCss);\n    const {\n        [colorScheme]: defaultSchemeVal\n      } = colorSchemesMap,\n      rest = _objectWithoutPropertiesLoose(colorSchemesMap, [colorScheme].map(_toPropertyKey));\n    if (defaultSchemeVal) {\n      // default color scheme has to come before other color schemes\n      const {\n        css\n      } = defaultSchemeVal;\n      insertStyleSheet(getSelector?.(colorScheme, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${colorScheme}\"]`, css);\n    }\n    Object.entries(rest).forEach(([key, {\n      css\n    }]) => {\n      insertStyleSheet(getSelector?.(key, _extends({}, css)) || `[${theme.attribute || 'data-color-scheme'}=\"${key}\"]`, css);\n    });\n    return stylesheets;\n  };\n  return {\n    vars: themeVars,\n    generateThemeVars,\n    generateStyleSheets\n  };\n}\nexport default prepareCssVars;"],"mappings":"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"},"metadata":{},"sourceType":"module"}