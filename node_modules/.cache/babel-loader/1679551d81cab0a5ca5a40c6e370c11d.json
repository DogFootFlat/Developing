{"ast":null,"code":"var _jsxFileName = \"C:\\\\OtpishiAI\\\\src\\\\components\\\\product\\\\products\\\\productForm\\\\ProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ProductFilter from './ProductFilter';\nimport ProductFilters from './ProductFilters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = _ref => {\n  _s();\n\n  let {\n    fetchProducts,\n    renderItems\n  } = _ref;\n  const [filterValues, setFilterValues] = useState({\n    genre: '',\n    brand: '',\n    category: ''\n  });\n\n  const onChangeHandler = (id, value) => {\n    const updatedFilters = { ...filterValues,\n      [id]: value\n    };\n    setFilterValues(updatedFilters); // 쿼리 문자열 생성\n\n    const queryArray = Object.entries(updatedFilters).filter(_ref2 => {\n      let [_, v] = _ref2;\n      return v;\n    }) // 값이 있는 필터만 포함\n    .map(_ref3 => {\n      let [key, val] = _ref3;\n      return `${key}=${val}`;\n    });\n    fetchProducts(queryArray.join('&')); // 쿼리 문자열을 보내기\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderItems.map(renderItem => {\n      var _renderItem$items;\n\n      return ((_renderItem$items = renderItem.items) === null || _renderItem$items === void 0 ? void 0 : _renderItem$items.length) <= 1 ? /*#__PURE__*/_jsxDEV(ProductFilter, {\n        id: renderItem.id,\n        items: renderItem.items,\n        onChange: onChangeHandler\n      }, renderItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ProductFilters, {\n        id: renderItem.id,\n        items: renderItem.items,\n        onChange: onChangeHandler\n      }, renderItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(ProductForm, \"ugS4sRnWPSyzCmbuZGPUac6Ju7U=\");\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","ProductFilter","ProductFilters","ProductForm","fetchProducts","renderItems","filterValues","setFilterValues","genre","brand","category","onChangeHandler","id","value","updatedFilters","queryArray","Object","entries","filter","_","v","map","key","val","join","renderItem","items","length"],"sources":["C:/OtpishiAI/src/components/product/products/productForm/ProductForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ProductFilter from './ProductFilter';\r\nimport ProductFilters from './ProductFilters';\r\n\r\nconst ProductForm = ({ fetchProducts, renderItems }) => {\r\n  const [filterValues, setFilterValues] = useState({\r\n    genre: '',\r\n    brand: '',\r\n    category: '',\r\n  });\r\n\r\n  const onChangeHandler = (id, value) => {\r\n    const updatedFilters = { ...filterValues, [id]: value };\r\n    setFilterValues(updatedFilters);\r\n\r\n    // 쿼리 문자열 생성\r\n    const queryArray = Object.entries(updatedFilters)\r\n      .filter(([_, v]) => v) // 값이 있는 필터만 포함\r\n      .map(([key, val]) => `${key}=${val}`);\r\n\r\n    fetchProducts(queryArray.join('&')); // 쿼리 문자열을 보내기\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderItems.map((renderItem) =>\r\n        renderItem.items?.length <= 1 ? (\r\n          <ProductFilter id={renderItem.id} key={renderItem.id} items={renderItem.items} onChange={onChangeHandler} />\r\n        ) : (\r\n          <ProductFilters id={renderItem.id} key={renderItem.id} items={renderItem.items} onChange={onChangeHandler} />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,WAAW,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAAEC,aAAF;IAAiBC;EAAjB,CAAmC;EACtD,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC;IAC/CQ,KAAK,EAAE,EADwC;IAE/CC,KAAK,EAAE,EAFwC;IAG/CC,QAAQ,EAAE;EAHqC,CAAD,CAAhD;;EAMA,MAAMC,eAAe,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;IACrC,MAAMC,cAAc,GAAG,EAAE,GAAGR,YAAL;MAAmB,CAACM,EAAD,GAAMC;IAAzB,CAAvB;IACAN,eAAe,CAACO,cAAD,CAAf,CAFqC,CAIrC;;IACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeH,cAAf,EAChBI,MADgB,CACT;MAAA,IAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD;MAAA,OAAYA,CAAZ;IAAA,CADS,EACM;IADN,CAEhBC,GAFgB,CAEZ;MAAA,IAAC,CAACC,GAAD,EAAMC,GAAN,CAAD;MAAA,OAAiB,GAAED,GAAI,IAAGC,GAAI,EAA9B;IAAA,CAFY,CAAnB;IAIAnB,aAAa,CAACW,UAAU,CAACS,IAAX,CAAgB,GAAhB,CAAD,CAAb,CATqC,CASA;EACtC,CAVD;;EAYA,oBACE;IAAA,UACGnB,WAAW,CAACgB,GAAZ,CAAiBI,UAAD;MAAA;;MAAA,OACf,sBAAAA,UAAU,CAACC,KAAX,wEAAkBC,MAAlB,KAA4B,CAA5B,gBACE,QAAC,aAAD;QAAe,EAAE,EAAEF,UAAU,CAACb,EAA9B;QAAsD,KAAK,EAAEa,UAAU,CAACC,KAAxE;QAA+E,QAAQ,EAAEf;MAAzF,GAAuCc,UAAU,CAACb,EAAlD;QAAA;QAAA;QAAA;MAAA,QADF,gBAGE,QAAC,cAAD;QAAgB,EAAE,EAAEa,UAAU,CAACb,EAA/B;QAAuD,KAAK,EAAEa,UAAU,CAACC,KAAzE;QAAgF,QAAQ,EAAEf;MAA1F,GAAwCc,UAAU,CAACb,EAAnD;QAAA;QAAA;QAAA;MAAA,QAJa;IAAA,CAAhB;EADH,iBADF;AAWD,CA9BD;;GAAMT,W;;KAAAA,W;AAgCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}