{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = \"http://localhost:5001\";\n\nclass ApiService {\n  fetchBooks() {\n    return axios.get(API_BASE_URL + \"/books\");\n  }\n\n  fetchBookByID(bookId) {\n    return axios.get(API_BASE_URL + \"/books/\" + bookId);\n  }\n\n  editBook(book) {\n    return axios.put(API_BASE_URL + \"/books/\" + book.key, book);\n  }\n\n  addBook(book) {\n    return axios.post(API_BASE_URL + \"/books\", book);\n  }\n\n  fileUpLoad(book) {\n    return axios.post(API_BASE_URL + \"/books\", book);\n  }\n\n  deleteBook(bookId) {\n    return axios.delete(API_BASE_URL + \"/books/\" + bookId);\n  }\n\n  fetchUsers() {\n    return axios.get(API_BASE_URL + \"/users\");\n  }\n\n  fetchUserByID(userId) {\n    return axios.get(API_BASE_URL + \"/users/\" + userId);\n  }\n\n  editUser(user) {\n    return axios.put(API_BASE_URL + \"/users/\" + user.key, user);\n  }\n\n  addUser(user) {\n    return axios.post(API_BASE_URL + \"/users\", user);\n  }\n\n  deleteUser(userId) {\n    return axios.delete(API_BASE_URL + \"/users/\" + userId);\n  }\n\n}\n\nexport default new ApiService();","map":{"version":3,"names":["axios","API_BASE_URL","ApiService","fetchBooks","get","fetchBookByID","bookId","editBook","book","put","key","addBook","post","fileUpLoad","deleteBook","delete","fetchUsers","fetchUserByID","userId","editUser","user","addUser","deleteUser"],"sources":["C:/OtpishiAI/front-end/src/ApiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = \"http://localhost:5001\";\r\n\r\nclass ApiService {\r\n\tfetchBooks(){\r\n\t\treturn axios.get(API_BASE_URL+\"/books\");\r\n\t}\r\n\r\n\tfetchBookByID(bookId){\r\n\t\treturn axios.get(API_BASE_URL+\"/books/\"+bookId);\r\n\t}\r\n\t\r\n\teditBook(book){\r\n\t\treturn axios.put(API_BASE_URL+\"/books/\"+book.key, book);\r\n\t}\r\n\t\r\n\taddBook(book){\r\n\t\treturn axios.post(API_BASE_URL+\"/books\", book);\r\n\t}\r\n\t\r\n\tfileUpLoad(book){\r\n\t\treturn axios.post(API_BASE_URL+\"/books\", book);\r\n\t}\r\n\r\n\tdeleteBook(bookId){\r\n\t\treturn axios.delete(API_BASE_URL+\"/books/\"+bookId);\r\n\t}\r\n  \r\n\tfetchUsers(){\r\n\t\treturn axios.get(API_BASE_URL+\"/users\");\r\n\t}\r\n\r\n\tfetchUserByID(userId){\r\n\t\treturn axios.get(API_BASE_URL+\"/users/\"+userId);\r\n\t}\r\n\t\r\n\teditUser(user){\r\n\t\treturn axios.put(API_BASE_URL+\"/users/\"+user.key, user);\r\n\t}\r\n\t\r\n\taddUser(user){\r\n\t\treturn axios.post(API_BASE_URL+\"/users\", user);\r\n\t}\r\n\t\r\n\tdeleteUser(userId){\r\n\t\treturn axios.delete(API_BASE_URL+\"/users/\"+userId);\r\n\t}\r\n}\r\n\r\nexport default new ApiService;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG,uBAArB;;AAEA,MAAMC,UAAN,CAAiB;EAChBC,UAAU,GAAE;IACX,OAAOH,KAAK,CAACI,GAAN,CAAUH,YAAY,GAAC,QAAvB,CAAP;EACA;;EAEDI,aAAa,CAACC,MAAD,EAAQ;IACpB,OAAON,KAAK,CAACI,GAAN,CAAUH,YAAY,GAAC,SAAb,GAAuBK,MAAjC,CAAP;EACA;;EAEDC,QAAQ,CAACC,IAAD,EAAM;IACb,OAAOR,KAAK,CAACS,GAAN,CAAUR,YAAY,GAAC,SAAb,GAAuBO,IAAI,CAACE,GAAtC,EAA2CF,IAA3C,CAAP;EACA;;EAEDG,OAAO,CAACH,IAAD,EAAM;IACZ,OAAOR,KAAK,CAACY,IAAN,CAAWX,YAAY,GAAC,QAAxB,EAAkCO,IAAlC,CAAP;EACA;;EAEDK,UAAU,CAACL,IAAD,EAAM;IACf,OAAOR,KAAK,CAACY,IAAN,CAAWX,YAAY,GAAC,QAAxB,EAAkCO,IAAlC,CAAP;EACA;;EAEDM,UAAU,CAACR,MAAD,EAAQ;IACjB,OAAON,KAAK,CAACe,MAAN,CAAad,YAAY,GAAC,SAAb,GAAuBK,MAApC,CAAP;EACA;;EAEDU,UAAU,GAAE;IACX,OAAOhB,KAAK,CAACI,GAAN,CAAUH,YAAY,GAAC,QAAvB,CAAP;EACA;;EAEDgB,aAAa,CAACC,MAAD,EAAQ;IACpB,OAAOlB,KAAK,CAACI,GAAN,CAAUH,YAAY,GAAC,SAAb,GAAuBiB,MAAjC,CAAP;EACA;;EAEDC,QAAQ,CAACC,IAAD,EAAM;IACb,OAAOpB,KAAK,CAACS,GAAN,CAAUR,YAAY,GAAC,SAAb,GAAuBmB,IAAI,CAACV,GAAtC,EAA2CU,IAA3C,CAAP;EACA;;EAEDC,OAAO,CAACD,IAAD,EAAM;IACZ,OAAOpB,KAAK,CAACY,IAAN,CAAWX,YAAY,GAAC,QAAxB,EAAkCmB,IAAlC,CAAP;EACA;;EAEDE,UAAU,CAACJ,MAAD,EAAQ;IACjB,OAAOlB,KAAK,CAACe,MAAN,CAAad,YAAY,GAAC,SAAb,GAAuBiB,MAApC,CAAP;EACA;;AA3Ce;;AA8CjB,eAAe,IAAIhB,UAAJ,EAAf"},"metadata":{},"sourceType":"module"}