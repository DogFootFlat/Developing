{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"badgeInset\", \"children\", \"size\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    size,\n    anchorOrigin,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible', anchorOrigin && `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, {});\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({}, ownerState.size === 'sm' && _extends({\n    '--Badge-minHeight': '0.5rem'\n  }, ownerState.badgeContent && {\n    '--Badge-minHeight': '1rem'\n  }, {\n    '--Badge-paddingX': '0.25rem'\n  }), ownerState.size === 'md' && _extends({\n    '--Badge-minHeight': '0.75rem'\n  }, ownerState.badgeContent && {\n    '--Badge-minHeight': '1.25rem'\n  }, {\n    '--Badge-paddingX': '0.375rem'\n  }), ownerState.size === 'lg' && _extends({\n    '--Badge-minHeight': '1rem'\n  }, ownerState.badgeContent && {\n    '--Badge-minHeight': '1.5rem'\n  }, {\n    '--Badge-paddingX': '0.5rem'\n  }), {\n    '--Badge-ringSize': '2px',\n    '--Badge-ring': `0 0 0 var(--Badge-ringSize) var(--Badge-ringColor, ${theme.vars.palette.background.surface})`,\n    position: 'relative',\n    display: 'inline-flex',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    flexShrink: 0\n  });\n});\nconst BadgeBadge = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => styles.badge\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  const inset = {\n    top: ownerState.badgeInset,\n    left: ownerState.badgeInset,\n    bottom: ownerState.badgeInset,\n    right: ownerState.badgeInset\n  };\n\n  if (typeof ownerState.badgeInset === 'string') {\n    const insetValues = ownerState.badgeInset.split(' ');\n\n    if (insetValues.length > 1) {\n      inset.top = insetValues[0];\n      inset.right = insetValues[1];\n\n      if (insetValues.length === 2) {\n        inset.bottom = insetValues[0];\n        inset.left = insetValues[1];\n      }\n\n      if (insetValues.length === 3) {\n        inset.left = insetValues[1];\n        inset.bottom = insetValues[2];\n      }\n\n      if (insetValues.length === 4) {\n        inset.bottom = insetValues[2];\n        inset.left = insetValues[3];\n      }\n    }\n  }\n\n  const translateY = ownerState.anchorOrigin?.vertical === 'top' ? 'translateY(-50%)' : 'translateY(50%)';\n  const translateX = ownerState.anchorOrigin?.horizontal === 'left' ? 'translateX(-50%)' : 'translateX(50%)';\n  const transformOriginY = ownerState.anchorOrigin?.vertical === 'top' ? '0%' : '100%';\n  const transformOriginX = ownerState.anchorOrigin?.horizontal === 'left' ? '0%' : '100%';\n  const typography = theme.typography[`body-${{\n    sm: 'xs',\n    md: 'sm',\n    lg: 'md'\n  }[ownerState.size]}`];\n  return _extends({\n    '--Icon-color': 'currentColor',\n    '--Icon-fontSize': `calc(1em * ${typography?.lineHeight ?? '1'})`,\n    display: 'inline-flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    boxShadow: 'var(--Badge-ring)',\n    lineHeight: 1,\n    padding: '0 calc(var(--Badge-paddingX) - var(--variant-borderWidth, 0px))',\n    minHeight: 'var(--Badge-minHeight)',\n    minWidth: 'var(--Badge-minHeight)',\n    borderRadius: 'var(--Badge-radius, var(--Badge-minHeight))',\n    zIndex: theme.vars.zIndex.badge,\n    backgroundColor: theme.vars.palette.background.surface,\n    [ownerState.anchorOrigin.vertical]: inset[ownerState.anchorOrigin.vertical],\n    [ownerState.anchorOrigin.horizontal]: inset[ownerState.anchorOrigin.horizontal],\n    transform: `scale(1) ${translateX} ${translateY}`,\n    transformOrigin: `${transformOriginX} ${transformOriginY}`,\n    [`&.${badgeClasses.invisible}`]: {\n      transform: `scale(0) ${translateX} ${translateY}`\n    }\n  }, typography, {\n    fontWeight: theme.vars.fontWeight.md\n  }, theme.variants[ownerState.variant]?.[ownerState.color]);\n});\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/joy-ui/react-badge/)\n *\n * API:\n *\n * - [Badge API](https://mui.com/joy-ui/api/badge/)\n */\n\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    badgeInset: badgeInsetProp = 0,\n    children,\n    size: sizeProp = 'md',\n    color: colorProp = 'primary',\n    invisible: invisibleProp = false,\n    max = 99,\n    badgeContent: badgeContentProp = '',\n    showZero = false,\n    variant: variantProp = 'solid',\n    component,\n    slots = {},\n    slotProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    size: sizeProp,\n    badgeInset: badgeInsetProp,\n    color: colorProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null)) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    size = sizeProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp,\n    badgeInset = badgeInsetProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    badgeInset,\n    variant,\n    invisible,\n    color,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n\n  let displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n\n  if (invisible && badgeContentProp === 0) {\n    displayValue = '';\n  }\n\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: BadgeRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotBadge, badgeProps] = useSlot('badge', {\n    className: classes.badge,\n    elementType: BadgeBadge,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(SlotBadge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   * @default ''\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The inset of the badge. Support shorthand syntax as described in https://developer.mozilla.org/en-US/docs/Web/CSS/inset.\n   * @default 0\n   */\n  badgeInset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'solid'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","unstable_capitalize","capitalize","usePreviousProps","unstable_composeClasses","composeClasses","styled","useThemeProps","useSlot","badgeClasses","getBadgeUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","color","variant","size","anchorOrigin","invisible","slots","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","theme","badgeContent","vars","palette","background","surface","position","display","verticalAlign","flexShrink","BadgeBadge","inset","top","badgeInset","left","bottom","right","insetValues","split","length","translateY","translateX","transformOriginY","transformOriginX","typography","sm","md","lg","lineHeight","flexWrap","justifyContent","alignContent","alignItems","boxSizing","boxShadow","padding","minHeight","minWidth","borderRadius","zIndex","backgroundColor","transform","transformOrigin","fontWeight","variants","Badge","forwardRef","inProps","ref","anchorOriginProp","badgeInsetProp","children","sizeProp","colorProp","invisibleProp","max","badgeContentProp","showZero","variantProp","component","slotProps","other","prevProps","classes","externalForwardedProps","displayValue","Number","SlotRoot","rootProps","className","elementType","SlotBadge","badgeProps","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","oneOfType","number","string","bool","func","object","sx","arrayOf"],"sources":["C:/OtpishiAI/node_modules/@mui/joy/Badge/Badge.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"badgeInset\", \"children\", \"size\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    size,\n    anchorOrigin,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible', anchorOrigin && `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, {});\n};\nconst BadgeRoot = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.size === 'sm' && _extends({\n  '--Badge-minHeight': '0.5rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1rem'\n}, {\n  '--Badge-paddingX': '0.25rem'\n}), ownerState.size === 'md' && _extends({\n  '--Badge-minHeight': '0.75rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1.25rem'\n}, {\n  '--Badge-paddingX': '0.375rem'\n}), ownerState.size === 'lg' && _extends({\n  '--Badge-minHeight': '1rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1.5rem'\n}, {\n  '--Badge-paddingX': '0.5rem'\n}), {\n  '--Badge-ringSize': '2px',\n  '--Badge-ring': `0 0 0 var(--Badge-ringSize) var(--Badge-ringColor, ${theme.vars.palette.background.surface})`,\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n}));\nconst BadgeBadge = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => styles.badge\n})(({\n  theme,\n  ownerState\n}) => {\n  const inset = {\n    top: ownerState.badgeInset,\n    left: ownerState.badgeInset,\n    bottom: ownerState.badgeInset,\n    right: ownerState.badgeInset\n  };\n  if (typeof ownerState.badgeInset === 'string') {\n    const insetValues = ownerState.badgeInset.split(' ');\n    if (insetValues.length > 1) {\n      inset.top = insetValues[0];\n      inset.right = insetValues[1];\n      if (insetValues.length === 2) {\n        inset.bottom = insetValues[0];\n        inset.left = insetValues[1];\n      }\n      if (insetValues.length === 3) {\n        inset.left = insetValues[1];\n        inset.bottom = insetValues[2];\n      }\n      if (insetValues.length === 4) {\n        inset.bottom = insetValues[2];\n        inset.left = insetValues[3];\n      }\n    }\n  }\n  const translateY = ownerState.anchorOrigin?.vertical === 'top' ? 'translateY(-50%)' : 'translateY(50%)';\n  const translateX = ownerState.anchorOrigin?.horizontal === 'left' ? 'translateX(-50%)' : 'translateX(50%)';\n  const transformOriginY = ownerState.anchorOrigin?.vertical === 'top' ? '0%' : '100%';\n  const transformOriginX = ownerState.anchorOrigin?.horizontal === 'left' ? '0%' : '100%';\n  const typography = theme.typography[`body-${{\n    sm: 'xs',\n    md: 'sm',\n    lg: 'md'\n  }[ownerState.size]}`];\n  return _extends({\n    '--Icon-color': 'currentColor',\n    '--Icon-fontSize': `calc(1em * ${typography?.lineHeight ?? '1'})`,\n    display: 'inline-flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    boxShadow: 'var(--Badge-ring)',\n    lineHeight: 1,\n    padding: '0 calc(var(--Badge-paddingX) - var(--variant-borderWidth, 0px))',\n    minHeight: 'var(--Badge-minHeight)',\n    minWidth: 'var(--Badge-minHeight)',\n    borderRadius: 'var(--Badge-radius, var(--Badge-minHeight))',\n    zIndex: theme.vars.zIndex.badge,\n    backgroundColor: theme.vars.palette.background.surface,\n    [ownerState.anchorOrigin.vertical]: inset[ownerState.anchorOrigin.vertical],\n    [ownerState.anchorOrigin.horizontal]: inset[ownerState.anchorOrigin.horizontal],\n    transform: `scale(1) ${translateX} ${translateY}`,\n    transformOrigin: `${transformOriginX} ${transformOriginY}`,\n    [`&.${badgeClasses.invisible}`]: {\n      transform: `scale(0) ${translateX} ${translateY}`\n    }\n  }, typography, {\n    fontWeight: theme.vars.fontWeight.md\n  }, theme.variants[ownerState.variant]?.[ownerState.color]);\n});\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/joy-ui/react-badge/)\n *\n * API:\n *\n * - [Badge API](https://mui.com/joy-ui/api/badge/)\n */\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      badgeInset: badgeInsetProp = 0,\n      children,\n      size: sizeProp = 'md',\n      color: colorProp = 'primary',\n      invisible: invisibleProp = false,\n      max = 99,\n      badgeContent: badgeContentProp = '',\n      showZero = false,\n      variant: variantProp = 'solid',\n      component,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    size: sizeProp,\n    badgeInset: badgeInsetProp,\n    color: colorProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null)) {\n    invisible = true;\n  }\n  const {\n    color = colorProp,\n    size = sizeProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp,\n    badgeInset = badgeInsetProp\n  } = invisible ? prevProps : props;\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    badgeInset,\n    variant,\n    invisible,\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  let displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  if (invisible && badgeContentProp === 0) {\n    displayValue = '';\n  }\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: BadgeRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotBadge, badgeProps] = useSlot('badge', {\n    className: classes.badge,\n    elementType: BadgeBadge,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(SlotBadge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   * @default ''\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The inset of the badge. Support shorthand syntax as described in https://developer.mozilla.org/en-US/docs/Web/CSS/inset.\n   * @default 0\n   */\n  badgeInset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'solid'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Badge;"],"mappings":"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"},"metadata":{},"sourceType":"module"}