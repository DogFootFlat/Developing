{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"addLocale\", {\n  enumerable: true,\n  get: function () {\n    return addLocale;\n  }\n});\n\nconst _addpathprefix = require(\"./add-path-prefix\");\n\nconst _pathhasprefix = require(\"./path-has-prefix\");\n\nfunction addLocale(path, locale, defaultLocale, ignorePrefix) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path;\n  const lower = path.toLowerCase(); // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n\n  if (!ignorePrefix) {\n    if ((0, _pathhasprefix.pathHasPrefix)(lower, '/api')) return path;\n    if ((0, _pathhasprefix.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n  } // Add the locale prefix to the path.\n\n\n  return (0, _addpathprefix.addPathPrefix)(path, \"/\" + locale);\n}","map":{"version":3,"mappings":";;;;;+BAQgBA;kBAAAA;;WAAAA;;AAAAA;;+BARc;;+BACA;;AAOvB,SAASA,SAAT,CACLC,IADK,EAELC,MAFK,EAGLC,aAHK,EAILC,YAJK,EAIiB;EAEtB;EACA;EACA,IAAI,CAACF,MAAD,IAAWA,WAAWC,aAA1B,EAAyC,OAAOF,IAAP;EAEzC,MAAMI,QAAQJ,KAAKK,WAALL,EAAd,CANsB,CAQtB;EACA;;EACA,IAAI,CAACG,YAAL,EAAmB;IACjB,IAAIG,kCAAcF,KAAdE,EAAqB,MAArBA,CAAJ,EAAkC,OAAON,IAAP;IAClC,IAAIM,kCAAcF,KAAdE,EAAqB,MAAIL,OAAOI,WAAPJ,EAAzBK,CAAJ,EAAsD,OAAON,IAAP;EACxD,CAbsB,CAetB;;;EACA,OAAOO,kCAAcP,IAAdO,EAAoB,MAAIN,MAAxBM,CAAP;AACF","names":["addLocale","path","locale","defaultLocale","ignorePrefix","lower","toLowerCase","pathHasPrefix","addPathPrefix"],"sources":["C:\\OtpishiAI\\node_modules\\next\\src\\shared\\lib\\router\\utils\\add-locale.ts"],"sourcesContent":["import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n"]},"metadata":{},"sourceType":"script"}