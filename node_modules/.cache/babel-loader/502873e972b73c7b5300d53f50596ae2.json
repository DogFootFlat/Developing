{"ast":null,"code":"import{Pagination}from'@mui/material';import React,{useCallback,useContext,useEffect,useState}from'react';import ApiService from'../../../ApiService';import AuthContext from'../../../store/auth-context';import Card from'../UI/Card';import*as CONSTANT from'./const';import classes from'./css/AvailableProducts.module.css';import ProductForm from'./productForm/ProductForm';import ProductSearch from'./productForm/ProductSearch';import ProductList from'./ProductList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AvailableProducts=()=>{const ctx=useContext(AuthContext);const[query,setQuery]=useState({genre_major:'',genre_minor:'',genre:'',brand:'',category:'',sort:'payment_n,desc',page:1});// const [search, setSearch] = useState({\n//   genre: '',\n//   keyword: '',\n// });\nconst[products,setProducts]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[totalPages,setTotalPages]=useState(1);const fetchProductsHandler=useCallback(async queryObj=>{setIsLoading(true);setError(null);try{let response;if(Object.values(queryObj).some(x=>x!=='')){const queryArray=Object.entries(queryObj).filter(_ref=>{let[key,value]=_ref;return!['genre_major','genre_minor'].includes(key)&&value!=='';}).map(_ref2=>{let[key,value]=_ref2;return`${key}=${encodeURIComponent(key==='page'?value-1:value)}`;});const queryString=queryArray.join('&');response=await ApiService.fetchProductsByQueryString(queryString);}else{response=await ApiService.fetchProducts();}if(response.status<200||response.status>=300){throw new Error('Something went wrong!');}const data=response.data;setProducts(data.content);setTotalPages(data.totalPages);}catch(err){setError(err.message||'Failed to fetch products');}finally{setIsLoading(false);}},[]);// const searchProductsHandler = useCallback(async (queryObj) => {\n//   setIsLoading(true);\n//   setError(null);\n//   try {\n//     let response;\n//     if (Object.values(queryObj).some((x) => x !== '')) {\n//       const queryArray = Object.entries(queryObj)\n//         .filter(([key, value]) => value !== '')\n//         .map(([key, value]) => `${key}=${encodeURIComponent(value)}`);\n//       const queryString = queryArray.join('&');\n//       response = await ApiService.searchProductsByQueryString(queryString);\n//     } else {\n//       response = await ApiService.fetchProducts();\n//     }\n//     if (response.status < 200 || response.status >= 300) {\n//       throw new Error('Something went wrong!');\n//     }\n//     const data = response.data;\n//     setProducts(data.content);\n//     setTotalPages(data.totalPages);\n//   } catch (err) {\n//     setError(err.message || 'Failed to fetch products');\n//   } finally {\n//     setIsLoading(false);\n//   }\n// }, []);\nuseEffect(()=>{fetchProductsHandler(query);},[fetchProductsHandler,query]);// useEffect(() => {\n//   searchProductsHandler(search);\n// }, [searchProductsHandler, search]);\nuseEffect(()=>{ctx.setCurrentPage('products');},[ctx]);const handlePageChange=useCallback((event,value)=>{setQuery(prevQuery=>({...prevQuery,page:value}));},[]);const handleFilterChange=useCallback((filterId,value)=>{setQuery(prevQuery=>({...prevQuery,[filterId]:value}));// filterId === 'genre' && setSearch((prevSearch) => ({ ...prevSearch, genre: value }));\n},[]);// const handleSearch = useCallback((searchTerm) => {\n//   setSearch((prevSearch) => ({ ...prevSearch, keyword: searchTerm }));\n// }, []);\nreturn/*#__PURE__*/_jsxs(Card,{className:classes.products,children:[/*#__PURE__*/_jsx(ProductSearch,{onSearch:()=>{}}),/*#__PURE__*/_jsx(ProductForm,{queryObj:query,fetchProducts:handleFilterChange,renderItems:CONSTANT.renderItems}),/*#__PURE__*/_jsx(Pagination,{count:totalPages,page:query.page,onChange:handlePageChange,color:\"primary\",className:classes.pagination,siblingCount:1,boundaryCount:1,showFirstButton:true,showLastButton:true}),/*#__PURE__*/_jsx(ProductList,{isLoading:isLoading,error:error,products:products})]});};export default/*#__PURE__*/React.memo(AvailableProducts);","map":{"version":3,"names":["Pagination","React","useCallback","useContext","useEffect","useState","ApiService","AuthContext","Card","CONSTANT","classes","ProductForm","ProductSearch","ProductList","AvailableProducts","ctx","query","setQuery","genre_major","genre_minor","genre","brand","category","sort","page","products","setProducts","isLoading","setIsLoading","error","setError","totalPages","setTotalPages","fetchProductsHandler","queryObj","response","Object","values","some","x","queryArray","entries","filter","key","value","includes","map","encodeURIComponent","queryString","join","fetchProductsByQueryString","fetchProducts","status","Error","data","content","err","message","setCurrentPage","handlePageChange","event","prevQuery","handleFilterChange","filterId","renderItems","pagination","memo"],"sources":["C:/OtpishiAI/src/components/product/products/AvailableProducts.jsx"],"sourcesContent":["import { Pagination } from '@mui/material';\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport ApiService from '../../../ApiService';\r\nimport AuthContext from '../../../store/auth-context';\r\nimport Card from '../UI/Card';\r\nimport * as CONSTANT from './const';\r\nimport classes from './css/AvailableProducts.module.css';\r\nimport ProductForm from './productForm/ProductForm';\r\nimport ProductSearch from './productForm/ProductSearch';\r\nimport ProductList from './ProductList';\r\n\r\nconst AvailableProducts = () => {\r\n  const ctx = useContext(AuthContext);\r\n\r\n  const [query, setQuery] = useState({\r\n    genre_major: '',\r\n    genre_minor: '',\r\n    genre: '',\r\n    brand: '',\r\n    category: '',\r\n    sort: 'payment_n,desc',\r\n    page: 1,\r\n  });\r\n\r\n  // const [search, setSearch] = useState({\r\n  //   genre: '',\r\n  //   keyword: '',\r\n  // });\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  const fetchProductsHandler = useCallback(async (queryObj) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      let response;\r\n      if (Object.values(queryObj).some((x) => x !== '')) {\r\n        const queryArray = Object.entries(queryObj)\r\n          .filter(([key, value]) => !['genre_major', 'genre_minor'].includes(key) && value !== '')\r\n          .map(([key, value]) => `${key}=${encodeURIComponent(key === 'page' ? value - 1 : value)}`);\r\n        const queryString = queryArray.join('&');\r\n        response = await ApiService.fetchProductsByQueryString(queryString);\r\n      } else {\r\n        response = await ApiService.fetchProducts();\r\n      }\r\n      if (response.status < 200 || response.status >= 300) {\r\n        throw new Error('Something went wrong!');\r\n      }\r\n      const data = response.data;\r\n      setProducts(data.content);\r\n      setTotalPages(data.totalPages);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch products');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // const searchProductsHandler = useCallback(async (queryObj) => {\r\n  //   setIsLoading(true);\r\n  //   setError(null);\r\n  //   try {\r\n  //     let response;\r\n  //     if (Object.values(queryObj).some((x) => x !== '')) {\r\n  //       const queryArray = Object.entries(queryObj)\r\n  //         .filter(([key, value]) => value !== '')\r\n  //         .map(([key, value]) => `${key}=${encodeURIComponent(value)}`);\r\n  //       const queryString = queryArray.join('&');\r\n  //       response = await ApiService.searchProductsByQueryString(queryString);\r\n  //     } else {\r\n  //       response = await ApiService.fetchProducts();\r\n  //     }\r\n  //     if (response.status < 200 || response.status >= 300) {\r\n  //       throw new Error('Something went wrong!');\r\n  //     }\r\n  //     const data = response.data;\r\n  //     setProducts(data.content);\r\n  //     setTotalPages(data.totalPages);\r\n  //   } catch (err) {\r\n  //     setError(err.message || 'Failed to fetch products');\r\n  //   } finally {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProductsHandler(query);\r\n  }, [fetchProductsHandler, query]);\r\n\r\n  // useEffect(() => {\r\n  //   searchProductsHandler(search);\r\n  // }, [searchProductsHandler, search]);\r\n\r\n  useEffect(() => {\r\n    ctx.setCurrentPage('products');\r\n  }, [ctx]);\r\n\r\n  const handlePageChange = useCallback((event, value) => {\r\n    setQuery((prevQuery) => ({ ...prevQuery, page: value }));\r\n  }, []);\r\n\r\n  const handleFilterChange = useCallback((filterId, value) => {\r\n    setQuery((prevQuery) => ({ ...prevQuery, [filterId]: value }));\r\n    // filterId === 'genre' && setSearch((prevSearch) => ({ ...prevSearch, genre: value }));\r\n  }, []);\r\n\r\n  // const handleSearch = useCallback((searchTerm) => {\r\n  //   setSearch((prevSearch) => ({ ...prevSearch, keyword: searchTerm }));\r\n  // }, []);\r\n\r\n  return (\r\n    <Card className={classes.products}>\r\n      <ProductSearch onSearch={() => {}} />\r\n      <ProductForm queryObj={query} fetchProducts={handleFilterChange} renderItems={CONSTANT.renderItems} />\r\n      <Pagination\r\n        count={totalPages}\r\n        page={query.page}\r\n        onChange={handlePageChange}\r\n        color=\"primary\"\r\n        className={classes.pagination}\r\n        siblingCount={1}\r\n        boundaryCount={1}\r\n        showFirstButton\r\n        showLastButton\r\n      />\r\n      <ProductList isLoading={isLoading} error={error} products={products} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(AvailableProducts);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}