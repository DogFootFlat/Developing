{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCTS } from './PRODUCTS';\nimport { PRODUCT } from './PRODUCT';\nimport { PRODUCT_BRAND } from './PRODUCT_BRAND';\nconst API_BASE_URL = 'https://back.otpishai.shop';\n\nclass ApiService {\n  getSignInUrl(site) {\n    return axios.get(`${API_BASE_URL}/signin/${site}`, {\n      withCredentials: true\n    });\n  }\n\n  signIn(url) {\n    window.location.href = url;\n  }\n\n  fetchUsers() {\n    return axios.get(`${API_BASE_URL}/register`, {\n      withCredentials: true\n    });\n  }\n\n  fetchProducts() {\n    // return axios.get(`${API_BASE_URL}/product`, { withCredentials: true });\n    // TODO: 테스트코드\n    return PRODUCTS;\n  }\n\n  fetchProductsByQueryString(queryString) {\n    // return axios.get(`${API_BASE_URL}/product?${queryString}`, { withCredentials: true });\n    // TODO: 테스트코드\n    console.log(queryString);\n    return PRODUCTS;\n  }\n\n  searchProductsByQueryString(queryString) {\n    // return axios.get(`${API_BASE_URL}/search?${queryString}`, { withCredentials: true });\n    // TODO: 테스트코드\n    console.log(queryString);\n    return PRODUCTS;\n  }\n\n  fetchProductByNum(productNum) {\n    // return axios.get(`${API_BASE_URL}/product_detail/${productNum}`, { withCredentials: true });\n    // TODO: 테스트코드\n    return {\n      data: {\n        productCode: '5006538447',\n        productName: '네티 랩 썸머니트',\n        productImg: ['https://image.msscdn.net/images/goods_img/20240509/4118941/4118941_17152412559989_125.jpg'],\n        productInfo: null,\n        category: ['nnn'],\n        genreCode: '0010106',\n        payment: 3,\n        favorite: 0,\n        review: 0,\n        productRdate: '2024-06-01T02:08:00',\n        isDeleted: 0,\n        judge: 'NULL',\n        productBrand: 'TWEE',\n        productGender: 1,\n        productRegistrant: 'NULL',\n        productNum: 6,\n        productDetails: [],\n        reviews: [],\n        oprice: 29900,\n        rprice: 0\n      }\n    };\n  } // 장바구니 목록 조회\n\n\n  fetchCartList() {\n    return axios.get(`${API_BASE_URL}/cart/list`, {\n      withCredentials: true\n    });\n  } // 장바구니에 상품 추가\n\n\n  addToCart(productNum, productQuantity) {\n    return axios.post(`${API_BASE_URL}/cart/add/${productNum}/${productQuantity}`, {}, {\n      withCredentials: true\n    });\n  } // 장바구니에 상품 상세 추가\n\n\n  addToCartDetail(productDetailCode, productQuantity) {\n    return axios.post(`${API_BASE_URL}/cart/add/detail/${productDetailCode}/${productQuantity}`, {}, {\n      withCredentials: true\n    });\n  } // 장바구니에서 상품 삭제\n\n\n  removeFromCart(cartNum) {\n    return axios.delete(`${API_BASE_URL}/cart/delete/${cartNum}`, {\n      withCredentials: true\n    });\n  } // 장바구니 상품 수량 감소\n\n\n  decreaseCartItem(cartNum) {\n    return axios.post(`${API_BASE_URL}/cart/minus/${cartNum}`, {}, {\n      withCredentials: true\n    });\n  } // 장바구니 상품 수량 증가\n\n\n  increaseCartItem(cartNum) {\n    return axios.post(`${API_BASE_URL}/cart/plus/${cartNum}`, {}, {\n      withCredentials: true\n    });\n  } // 장바구니 동기화\n\n\n  syncCart(cartItems) {\n    return axios.post(`${API_BASE_URL}/cart/sync`, cartItems, {\n      withCredentials: true\n    });\n  }\n\n}\n\nexport default new ApiService();","map":{"version":3,"names":["axios","PRODUCTS","PRODUCT","PRODUCT_BRAND","API_BASE_URL","ApiService","getSignInUrl","site","get","withCredentials","signIn","url","window","location","href","fetchUsers","fetchProducts","fetchProductsByQueryString","queryString","console","log","searchProductsByQueryString","fetchProductByNum","productNum","data","productCode","productName","productImg","productInfo","category","genreCode","payment","favorite","review","productRdate","isDeleted","judge","productBrand","productGender","productRegistrant","productDetails","reviews","oprice","rprice","fetchCartList","addToCart","productQuantity","post","addToCartDetail","productDetailCode","removeFromCart","cartNum","delete","decreaseCartItem","increaseCartItem","syncCart","cartItems"],"sources":["C:/OtpishiAI/src/ApiService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { PRODUCTS } from './PRODUCTS';\r\nimport { PRODUCT } from './PRODUCT';\r\nimport { PRODUCT_BRAND } from './PRODUCT_BRAND';\r\n\r\nconst API_BASE_URL = 'https://back.otpishai.shop';\r\n\r\nclass ApiService {\r\n  getSignInUrl(site) {\r\n    return axios.get(`${API_BASE_URL}/signin/${site}`, { withCredentials: true });\r\n  }\r\n\r\n  signIn(url) {\r\n    window.location.href = url;\r\n  }\r\n\r\n  fetchUsers() {\r\n    return axios.get(`${API_BASE_URL}/register`, { withCredentials: true });\r\n  }\r\n\r\n  fetchProducts() {\r\n    // return axios.get(`${API_BASE_URL}/product`, { withCredentials: true });\r\n    // TODO: 테스트코드\r\n    return PRODUCTS;\r\n  }\r\n\r\n  fetchProductsByQueryString(queryString) {\r\n    // return axios.get(`${API_BASE_URL}/product?${queryString}`, { withCredentials: true });\r\n    // TODO: 테스트코드\r\n    console.log(queryString);\r\n    return PRODUCTS;\r\n  }\r\n\r\n  searchProductsByQueryString(queryString) {\r\n    // return axios.get(`${API_BASE_URL}/search?${queryString}`, { withCredentials: true });\r\n    // TODO: 테스트코드\r\n    console.log(queryString);\r\n    return PRODUCTS;\r\n  }\r\n\r\n  fetchProductByNum(productNum) {\r\n    // return axios.get(`${API_BASE_URL}/product_detail/${productNum}`, { withCredentials: true });\r\n    // TODO: 테스트코드\r\n    return {\r\n      data: {\r\n        productCode: '5006538447',\r\n        productName: '네티 랩 썸머니트',\r\n        productImg: ['https://image.msscdn.net/images/goods_img/20240509/4118941/4118941_17152412559989_125.jpg'],\r\n        productInfo: null,\r\n        category: ['nnn'],\r\n        genreCode: '0010106',\r\n        payment: 3,\r\n        favorite: 0,\r\n        review: 0,\r\n        productRdate: '2024-06-01T02:08:00',\r\n        isDeleted: 0,\r\n        judge: 'NULL',\r\n        productBrand: 'TWEE',\r\n        productGender: 1,\r\n        productRegistrant: 'NULL',\r\n        productNum: 6,\r\n        productDetails: [],\r\n        reviews: [],\r\n        oprice: 29900,\r\n        rprice: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  // 장바구니 목록 조회\r\n  fetchCartList() {\r\n    return axios.get(`${API_BASE_URL}/cart/list`, { withCredentials: true });\r\n  }\r\n\r\n  // 장바구니에 상품 추가\r\n  addToCart(productNum, productQuantity) {\r\n    return axios.post(`${API_BASE_URL}/cart/add/${productNum}/${productQuantity}`, {}, { withCredentials: true });\r\n  }\r\n\r\n  // 장바구니에 상품 상세 추가\r\n  addToCartDetail(productDetailCode, productQuantity) {\r\n    return axios.post(`${API_BASE_URL}/cart/add/detail/${productDetailCode}/${productQuantity}`, {}, { withCredentials: true });\r\n  }\r\n\r\n  // 장바구니에서 상품 삭제\r\n  removeFromCart(cartNum) {\r\n    return axios.delete(`${API_BASE_URL}/cart/delete/${cartNum}`, { withCredentials: true });\r\n  }\r\n\r\n  // 장바구니 상품 수량 감소\r\n  decreaseCartItem(cartNum) {\r\n    return axios.post(`${API_BASE_URL}/cart/minus/${cartNum}`, {}, { withCredentials: true });\r\n  }\r\n\r\n  // 장바구니 상품 수량 증가\r\n  increaseCartItem(cartNum) {\r\n    return axios.post(`${API_BASE_URL}/cart/plus/${cartNum}`, {}, { withCredentials: true });\r\n  }\r\n\r\n  // 장바구니 동기화\r\n  syncCart(cartItems) {\r\n    return axios.post(`${API_BASE_URL}/cart/sync`, cartItems, { withCredentials: true });\r\n  }\r\n}\r\n\r\nexport default new ApiService();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}