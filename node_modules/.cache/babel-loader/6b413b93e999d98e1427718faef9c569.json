{"ast":null,"code":"import _slicedToArray from\"C:/OtpishiAI/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import SmartToyIcon from'@mui/icons-material/SmartToy';import IconButton from'@mui/material/IconButton';import{useState,useEffect}from'react';import CartProvider from'../../store/CartProvider';import Sidebar from'../basic/SideBar';import Header from'../layout/Header';import Cart from'./cart/Cart';import Products from'./products/Products';import classes from'./css/ProdList.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProdList(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),cartIsShown=_useState2[0],setCartIsShown=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),sidebarIsVisible=_useState4[0],setSidebarIsVisible=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),htmlContent=_useState6[0],setHtmlContent=_useState6[1];// 외부 HTML 파일을 가져오기 위한 useEffect\nuseEffect(function(){if(sidebarIsVisible){fetch('/chatbot.html')// public 폴더 내 chatbot.html\n.then(function(response){return response.text();}).then(function(data){var parser=new DOMParser();var doc=parser.parseFromString(data,'text/html');// 1. <head>의 스타일 태그 및 링크 태그 추출\nvar headElements=doc.head.querySelectorAll('style, link[rel=\"stylesheet\"]');// 2. 추출한 스타일 요소들을 <head>에 추가\nheadElements.forEach(function(element){document.head.appendChild(element.cloneNode(true));});// 3. <body>의 콘텐츠만 추출\nvar bodyContent=doc.body.innerHTML;setHtmlContent(bodyContent);// 4. <script> 태그 추출 및 실행\nvar scriptElements=doc.body.querySelectorAll('script');scriptElements.forEach(function(script){var newScript=document.createElement('script');if(script.src){newScript.src=script.src;// 외부 스크립트일 경우 src 복사\n}else{newScript.textContent=script.textContent;// 인라인 스크립트일 경우 내용 복사\n}document.body.appendChild(newScript);// 스크립트 실행\n});}).catch(function(error){return console.error('Failed to load chatbot.html:',error);});}document.body.style.overflow=sidebarIsVisible?'hidden':'auto';// Cleanup 함수에서 사이드바가 닫힐 때 스크롤 복원\nreturn function(){document.body.style.overflow='auto';// 사이드바가 닫힐 때 스크롤 복원\n};},[sidebarIsVisible]);var showCartHandler=function showCartHandler(){setCartIsShown(true);};var hideCartHandler=function hideCartHandler(){setCartIsShown(false);};var toggleSidebar=function toggleSidebar(){setSidebarIsVisible(function(prev){return!prev;});};return/*#__PURE__*/_jsxs(CartProvider,{children:[cartIsShown&&/*#__PURE__*/_jsx(Cart,{onClose:hideCartHandler}),/*#__PURE__*/_jsx(Header,{onShowCart:showCartHandler}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsx(Products,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:toggleSidebar,sx:{position:'fixed',right:'30px',bottom:'30px',width:'30px',height:'30px'},children:/*#__PURE__*/_jsx(SmartToyIcon,{color:\"primary\"})}),/*#__PURE__*/_jsx(Sidebar,{isVisible:sidebarIsVisible,content:/*#__PURE__*/_jsx(\"div\",{className:classes['sidebar-content'],dangerouslySetInnerHTML:{__html:htmlContent}}),onClose:toggleSidebar})]});}export default ProdList;","map":{"version":3,"names":["SmartToyIcon","IconButton","useState","useEffect","CartProvider","Sidebar","Header","Cart","Products","classes","ProdList","cartIsShown","setCartIsShown","sidebarIsVisible","setSidebarIsVisible","htmlContent","setHtmlContent","fetch","then","response","text","data","parser","DOMParser","doc","parseFromString","headElements","head","querySelectorAll","forEach","element","document","appendChild","cloneNode","bodyContent","body","innerHTML","scriptElements","script","newScript","createElement","src","textContent","catch","error","console","style","overflow","showCartHandler","hideCartHandler","toggleSidebar","prev","position","right","bottom","width","height","__html"],"sources":["C:/OtpishiAI/src/components/product/ProdList.jsx"],"sourcesContent":["import SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useState, useEffect } from 'react';\r\nimport CartProvider from '../../store/CartProvider';\r\nimport Sidebar from '../basic/SideBar';\r\nimport Header from '../layout/Header';\r\nimport Cart from './cart/Cart';\r\nimport Products from './products/Products';\r\nimport classes from './css/ProdList.module.css';\r\n\r\nfunction ProdList() {\r\n  const [cartIsShown, setCartIsShown] = useState(false);\r\n  const [sidebarIsVisible, setSidebarIsVisible] = useState(false);\r\n  const [htmlContent, setHtmlContent] = useState('');\r\n\r\n  // 외부 HTML 파일을 가져오기 위한 useEffect\r\n  useEffect(() => {\r\n    if (sidebarIsVisible) {\r\n      fetch('/chatbot.html')  // public 폴더 내 chatbot.html\r\n        .then(response => response.text())\r\n        .then(data => {\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(data, 'text/html');\r\n\r\n          // 1. <head>의 스타일 태그 및 링크 태그 추출\r\n          const headElements = doc.head.querySelectorAll('style, link[rel=\"stylesheet\"]');\r\n\r\n          // 2. 추출한 스타일 요소들을 <head>에 추가\r\n          headElements.forEach(element => {\r\n            document.head.appendChild(element.cloneNode(true));\r\n          });\r\n\r\n          // 3. <body>의 콘텐츠만 추출\r\n          const bodyContent = doc.body.innerHTML;\r\n          setHtmlContent(bodyContent);\r\n\r\n          // 4. <script> 태그 추출 및 실행\r\n          const scriptElements = doc.body.querySelectorAll('script');\r\n          scriptElements.forEach((script) => {\r\n            const newScript = document.createElement('script');\r\n            if (script.src) {\r\n              newScript.src = script.src;  // 외부 스크립트일 경우 src 복사\r\n            } else {\r\n              newScript.textContent = script.textContent;  // 인라인 스크립트일 경우 내용 복사\r\n            }\r\n            document.body.appendChild(newScript);  // 스크립트 실행\r\n          });\r\n        })\r\n        .catch(error => console.error('Failed to load chatbot.html:', error));\r\n    }\r\n\r\n    document.body.style.overflow = sidebarIsVisible ? 'hidden' : 'auto';\r\n\r\n    // Cleanup 함수에서 사이드바가 닫힐 때 스크롤 복원\r\n    return () => {\r\n      document.body.style.overflow = 'auto';  // 사이드바가 닫힐 때 스크롤 복원\r\n    };\r\n  }, [sidebarIsVisible]);\r\n\r\n  const showCartHandler = () => {\r\n    setCartIsShown(true);\r\n  };\r\n\r\n  const hideCartHandler = () => {\r\n    setCartIsShown(false);\r\n  };\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarIsVisible(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <CartProvider>\r\n      {cartIsShown && <Cart onClose={hideCartHandler} />}\r\n      <Header onShowCart={showCartHandler} />\r\n      <main>\r\n        <Products />\r\n      </main>\r\n\r\n      {/* 아이콘 버튼 */}\r\n      <IconButton\r\n        onClick={toggleSidebar}\r\n        sx={{\r\n          position: 'fixed',\r\n          right: '30px',\r\n          bottom: '30px',\r\n          width: '30px',\r\n          height: '30px'\r\n        }}\r\n      >\r\n        <SmartToyIcon color=\"primary\" />\r\n      </IconButton>\r\n\r\n      {/* 사이드바 모달 */}\r\n      <Sidebar\r\n        isVisible={sidebarIsVisible}\r\n        content={\r\n          <div className={classes['sidebar-content']} \r\n          dangerouslySetInnerHTML={{ __html: htmlContent }}>\r\n          </div>\r\n        }\r\n        onClose={toggleSidebar}\r\n      />\r\n    </CartProvider >\r\n  );\r\n}\r\n\r\nexport default ProdList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}