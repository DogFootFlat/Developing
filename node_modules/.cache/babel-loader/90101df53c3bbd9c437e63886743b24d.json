{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n/**\n * Contains the logic for an item of a list-like component (for example Select, Menu, etc.).\n * It handles the item's mouse events and tab index.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\n\nexport function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item\n  } = parameters;\n  const listContext = React.useContext(ListContext);\n\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n\n  const {\n    dispatch,\n    getItemState\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const createHandleClick = React.useCallback(externalHandlers => event => {\n    externalHandlers.onClick?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (item === undefined) {\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\n      }\n    }\n\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item: item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\n    externalHandlers.onMouseOver?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (item === undefined) {\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\n      }\n    }\n\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item: item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n\n  const getRootProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      tabIndex\n    });\n  };\n\n  return {\n    getRootProps,\n    highlighted,\n    selected\n  };\n}","map":{"version":3,"names":["_extends","React","extractEventHandlers","ListActionTypes","ListContext","useListItem","parameters","handlePointerOverEvents","item","listContext","useContext","Error","dispatch","getItemState","highlighted","selected","focusable","createHandleClick","useCallback","externalHandlers","event","onClick","defaultPrevented","process","env","NODE_ENV","undefined","join","type","itemClick","createHandlePointerOver","onMouseOver","itemHover","tabIndex","getRootProps","externalProps","externalEventHandlers","onPointerOver"],"sources":["C:/OtpishiAI/node_modules/@mui/joy/node_modules/@mui/base/useList/useListItem.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n\n/**\n * Contains the logic for an item of a list-like component (for example Select, Menu, etc.).\n * It handles the item's mouse events and tab index.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\nexport function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item\n  } = parameters;\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  const {\n    dispatch,\n    getItemState\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const createHandleClick = React.useCallback(externalHandlers => event => {\n    externalHandlers.onClick?.(event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (item === undefined) {\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\n      }\n    }\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item: item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\n    externalHandlers.onMouseOver?.(event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (item === undefined) {\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\n      }\n    }\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item: item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      tabIndex\n    });\n  };\n  return {\n    getRootProps,\n    highlighted,\n    selected\n  };\n}"],"mappings":"AAAA;;AAEA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,UAArB,EAAiC;EACtC,MAAM;IACJC,uBAAuB,GAAG,KADtB;IAEJC;EAFI,IAGFF,UAHJ;EAIA,MAAMG,WAAW,GAAGR,KAAK,CAACS,UAAN,CAAiBN,WAAjB,CAApB;;EACA,IAAI,CAACK,WAAL,EAAkB;IAChB,MAAM,IAAIE,KAAJ,CAAU,gDAAV,CAAN;EACD;;EACD,MAAM;IACJC,QADI;IAEJC;EAFI,IAGFJ,WAHJ;EAIA,MAAM;IACJK,WADI;IAEJC,QAFI;IAGJC;EAHI,IAIFH,YAAY,CAACL,IAAD,CAJhB;EAKA,MAAMS,iBAAiB,GAAGhB,KAAK,CAACiB,WAAN,CAAkBC,gBAAgB,IAAIC,KAAK,IAAI;IACvED,gBAAgB,CAACE,OAAjB,GAA2BD,KAA3B;;IACA,IAAIA,KAAK,CAACE,gBAAV,EAA4B;MAC1B;IACD;;IACD,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAIjB,IAAI,KAAKkB,SAAb,EAAwB;QACtB,MAAM,IAAIf,KAAJ,CAAU,CAAC,yDAAD,EAA4D,sEAA5D,EAAoIgB,IAApI,CAAyI,IAAzI,CAAV,CAAN;MACD;IACF;;IACDf,QAAQ,CAAC;MACPgB,IAAI,EAAEzB,eAAe,CAAC0B,SADf;MAEPrB,IAAI,EAAEA,IAFC;MAGPY;IAHO,CAAD,CAAR;EAKD,CAfyB,EAevB,CAACR,QAAD,EAAWJ,IAAX,CAfuB,CAA1B;EAgBA,MAAMsB,uBAAuB,GAAG7B,KAAK,CAACiB,WAAN,CAAkBC,gBAAgB,IAAIC,KAAK,IAAI;IAC7ED,gBAAgB,CAACY,WAAjB,GAA+BX,KAA/B;;IACA,IAAIA,KAAK,CAACE,gBAAV,EAA4B;MAC1B;IACD;;IACD,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAIjB,IAAI,KAAKkB,SAAb,EAAwB;QACtB,MAAM,IAAIf,KAAJ,CAAU,CAAC,yDAAD,EAA4D,sEAA5D,EAAoIgB,IAApI,CAAyI,IAAzI,CAAV,CAAN;MACD;IACF;;IACDf,QAAQ,CAAC;MACPgB,IAAI,EAAEzB,eAAe,CAAC6B,SADf;MAEPxB,IAAI,EAAEA,IAFC;MAGPY;IAHO,CAAD,CAAR;EAKD,CAf+B,EAe7B,CAACR,QAAD,EAAWJ,IAAX,CAf6B,CAAhC;EAgBA,IAAIyB,QAAJ;;EACA,IAAIjB,SAAJ,EAAe;IACbiB,QAAQ,GAAGnB,WAAW,GAAG,CAAH,GAAO,CAAC,CAA9B;EACD;;EACD,MAAMoB,YAAY,GAAG,YAAwB;IAAA,IAAvBC,aAAuB,uEAAP,EAAO;IAC3C,MAAMC,qBAAqB,GAAGlC,oBAAoB,CAACiC,aAAD,CAAlD;IACA,OAAOnC,QAAQ,CAAC,EAAD,EAAKmC,aAAL,EAAoB;MACjCd,OAAO,EAAEJ,iBAAiB,CAACmB,qBAAD,CADO;MAEjCC,aAAa,EAAE9B,uBAAuB,GAAGuB,uBAAuB,CAACM,qBAAD,CAA1B,GAAoDV,SAFzD;MAGjCO;IAHiC,CAApB,CAAf;EAKD,CAPD;;EAQA,OAAO;IACLC,YADK;IAELpB,WAFK;IAGLC;EAHK,CAAP;AAKD"},"metadata":{},"sourceType":"module"}