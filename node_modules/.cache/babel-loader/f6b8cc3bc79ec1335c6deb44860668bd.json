{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"uncheckedIcon\", \"checkedIcon\", \"label\", \"defaultChecked\", \"disabled\", \"disableIcon\", \"overlay\", \"id\", \"indeterminate\", \"indeterminateIcon\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"value\", \"color\", \"variant\", \"size\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useSwitch } from '@mui/base/useSwitch';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport CheckIcon from '../internal/svg-icons/Check';\nimport IndeterminateIcon from '../internal/svg-icons/HorizontalRule';\nimport { TypographyNestedContext } from '../Typography/Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    disableIcon,\n    focusVisible,\n    color,\n    variant,\n    size,\n    indeterminate\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],\n    checkbox: ['checkbox', checked && 'checked', indeterminate && 'indeterminate', disabled && 'disabled' // disabled class is necessary for displaying global variant\n    ],\n    action: ['action', checked && 'checked', disableIcon && disabled && 'disabled', // add disabled class to action element for displaying global variant\n    focusVisible && 'focusVisible'],\n    input: ['input'],\n    label: ['label']\n  };\n  return composeClasses(slots, getCheckboxUtilityClass, {});\n};\n\nconst CheckboxRoot = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  return _extends({\n    '--Icon-fontSize': 'var(--Checkbox-size)'\n  }, ownerState.size === 'sm' && {\n    '--Checkbox-size': '1rem',\n    '& ~ *': {\n      '--FormHelperText-margin': '0 0 0 1.5rem'\n    },\n    fontSize: theme.vars.fontSize.sm,\n    gap: 'var(--Checkbox-gap, 0.5rem)'\n  }, ownerState.size === 'md' && {\n    '--Checkbox-size': '1.25rem',\n    '& ~ *': {\n      '--FormHelperText-margin': '0.25rem 0 0 1.875rem'\n    },\n    fontSize: theme.vars.fontSize.md,\n    gap: 'var(--Checkbox-gap, 0.625rem)'\n  }, ownerState.size === 'lg' && {\n    '--Checkbox-size': '1.5rem',\n    '& ~ *': {\n      '--FormHelperText-margin': '0.375rem 0 0 2.25rem'\n    },\n    fontSize: theme.vars.fontSize.lg,\n    gap: 'var(--Checkbox-gap, 0.75rem)'\n  }, {\n    position: ownerState.overlay ? 'initial' : 'relative',\n    display: 'inline-flex',\n    fontFamily: theme.vars.fontFamily.body,\n    lineHeight: 'var(--Checkbox-size)',\n    color: theme.vars.palette.text.primary,\n    [`&.${checkboxClasses.disabled}`]: {\n      color: theme.variants.plainDisabled?.[ownerState.color]?.color\n    }\n  }, ownerState.disableIcon && {\n    color: theme.variants[ownerState.variant]?.[ownerState.color]?.color,\n    [`&.${checkboxClasses.disabled}`]: {\n      color: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]?.color\n    }\n  });\n});\nconst CheckboxCheckbox = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Checkbox',\n  overridesResolver: (props, styles) => styles.checkbox\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  const variantStyle = theme.variants[`${ownerState.variant}`]?.[ownerState.color];\n  return [_extends({\n    '--Icon-color': ownerState.color !== 'neutral' || ownerState.variant === 'solid' ? 'currentColor' : theme.vars.palette.text.icon,\n    boxSizing: 'border-box',\n    borderRadius: `min(${theme.vars.radius.sm}, 0.25rem)`,\n    width: 'var(--Checkbox-size)',\n    height: 'var(--Checkbox-size)',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexShrink: 0\n  }, ownerState.disableIcon && {\n    display: 'contents'\n  }, {\n    [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n      '--Icon-color': 'currentColor'\n    }\n  }), ...(!ownerState.disableIcon ? [_extends({}, variantStyle, {\n    backgroundColor: variantStyle?.backgroundColor ?? theme.vars.palette.background.surface\n  }), {\n    '&:hover': {\n      '@media (hover: hover)': theme.variants[`${ownerState.variant}Hover`]?.[ownerState.color]\n    }\n  }, {\n    '&:active': theme.variants[`${ownerState.variant}Active`]?.[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]\n  }] : [])];\n});\nconst CheckboxAction = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})(_ref3 => {\n  let {\n    theme,\n    ownerState\n  } = _ref3;\n  return [{\n    borderRadius: `var(--Checkbox-actionRadius, ${ownerState.overlay ? 'var(--unstable_actionRadius, inherit)' : 'inherit'})`,\n    textAlign: 'left',\n    // prevent text-align inheritance\n    position: 'absolute',\n    top: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    // clickable on the border and focus outline does not move when checked/unchecked\n    left: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    bottom: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    right: 'calc(-1 * var(--variant-borderWidth, 0px))',\n    zIndex: 1,\n    // The action element usually cover the area of nearest positioned parent\n    [theme.focus.selector]: theme.focus.default\n  }, ...(ownerState.disableIcon ? [theme.variants[ownerState.variant]?.[ownerState.color], {\n    '&:hover': theme.variants[`${ownerState.variant}Hover`]?.[ownerState.color]\n  }, {\n    '&:active': theme.variants[`${ownerState.variant}Active`]?.[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]\n  }] : [])];\n});\nconst CheckboxInput = styled('input', {\n  name: 'JoyCheckbox',\n  slot: 'Input',\n  overridesResolver: (props, styles) => styles.input\n})(() => ({\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n}));\nconst CheckboxLabel = styled('label', {\n  name: 'JoyCheckbox',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(_ref4 => {\n  let {\n    ownerState\n  } = _ref4;\n  return _extends({\n    flex: 1,\n    minWidth: 0\n  }, ownerState.disableIcon && {\n    zIndex: 1,\n    // label should stay on top of the action.\n    pointerEvents: 'none' // makes hover ineffect.\n\n  });\n});\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateIcon, {});\n/**\n *\n * Demos:\n *\n * - [Checkbox](https://mui.com/joy-ui/react-checkbox/)\n *\n * API:\n *\n * - [Checkbox API](https://mui.com/joy-ui/api/checkbox/)\n */\n\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCheckbox'\n  });\n\n  const {\n    checked: checkedProp,\n    uncheckedIcon,\n    checkedIcon = defaultCheckedIcon,\n    label,\n    defaultChecked,\n    disabled: disabledExternalProp,\n    disableIcon = false,\n    overlay,\n    id: idOverride,\n    indeterminate = false,\n    indeterminateIcon = defaultIndeterminateIcon,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly,\n    required,\n    value,\n    color: colorProp,\n    variant: variantProp,\n    size: sizeProp = 'md',\n    component,\n    slots = {},\n    slotProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const formControl = React.useContext(FormControlContext);\n  const disabledProp = inProps.disabled ?? formControl?.disabled ?? disabledExternalProp;\n  const size = inProps.size ?? formControl?.size ?? sizeProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    const registerEffect = formControl?.registerEffect; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (registerEffect) {\n        return registerEffect();\n      }\n\n      return undefined;\n    }, [registerEffect]);\n  }\n\n  const id = useId(idOverride ?? formControl?.htmlFor);\n  const useCheckboxProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible\n  } = useSwitch(useCheckboxProps);\n  const isCheckboxActive = checked || indeterminate;\n  const activeVariant = variantProp || 'solid';\n  const inactiveVariant = variantProp || 'outlined';\n  const variant = isCheckboxActive ? activeVariant : inactiveVariant;\n  const color = inProps.color || (formControl?.error ? 'danger' : formControl?.color ?? colorProp);\n  const activeColor = color || 'primary';\n  const inactiveColor = color || 'neutral';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableIcon,\n    overlay,\n    focusVisible,\n    color: isCheckboxActive ? activeColor : inactiveColor,\n    variant,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CheckboxRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotCheckbox, checkboxProps] = useSlot('checkbox', {\n    className: classes.checkbox,\n    elementType: CheckboxCheckbox,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotAction, actionProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CheckboxAction,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotInput, inputProps] = useSlot('input', {\n    additionalProps: _extends({\n      id,\n      name,\n      value,\n      readOnly,\n      role: undefined,\n      required: required ?? formControl?.required,\n      'aria-describedby': formControl?.['aria-describedby']\n    }, indeterminate && {\n      // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked#values\n      'aria-checked': 'mixed'\n    }),\n    className: classes.input,\n    elementType: CheckboxInput,\n    externalForwardedProps,\n    getSlotProps: getInputProps,\n    ownerState\n  });\n  const [SlotLabel, labelProps] = useSlot('label', {\n    additionalProps: {\n      htmlFor: id\n    },\n    className: classes.label,\n    elementType: CheckboxLabel,\n    externalForwardedProps,\n    ownerState\n  });\n  let icon = uncheckedIcon;\n\n  if (disableIcon) {\n    icon = null;\n  } else if (indeterminate) {\n    icon = indeterminateIcon;\n  } else if (checked) {\n    icon = checkedIcon;\n  }\n\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotCheckbox, _extends({}, checkboxProps, {\n      children: [/*#__PURE__*/_jsx(SlotAction, _extends({}, actionProps, {\n        children: /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))\n      })), icon]\n    })), label && /*#__PURE__*/_jsx(TypographyNestedContext.Provider, {\n      value: true,\n      children: /*#__PURE__*/_jsx(SlotLabel, _extends({}, labelProps, {\n        children: label\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the checked icon is removed and the selected variant is applied on the `action` element instead.\n   * @default false\n   */\n  disableIcon: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * The label element next to the checkbox.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The `name` attribute of the input.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * If `true`, the root element's position is set to initial which allows the action area to fill the nearest positioned parent.\n   * This prop is useful for composing Checkbox with ListItem component.\n   * @default false\n   */\n  overlay: PropTypes.bool,\n\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    checkbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    label: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    checkbox: PropTypes.elementType,\n    input: PropTypes.elementType,\n    label: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The icon when `checked` is false.\n   */\n  uncheckedIcon: PropTypes.node,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'solid'\n   */\n  variant: PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid'])\n} : void 0;\nexport default Checkbox;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","unstable_useId","useId","unstable_capitalize","capitalize","unstable_composeClasses","composeClasses","useSwitch","styled","useThemeProps","useSlot","checkboxClasses","getCheckboxUtilityClass","CheckIcon","IndeterminateIcon","TypographyNestedContext","FormControlContext","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","checked","disabled","disableIcon","focusVisible","color","variant","size","indeterminate","slots","root","checkbox","action","input","label","CheckboxRoot","name","slot","overridesResolver","props","styles","theme","fontSize","vars","sm","gap","md","lg","position","overlay","display","fontFamily","body","lineHeight","palette","text","primary","variants","plainDisabled","CheckboxCheckbox","variantStyle","icon","boxSizing","borderRadius","radius","width","height","justifyContent","alignItems","flexShrink","backgroundColor","background","surface","CheckboxAction","textAlign","top","left","bottom","right","zIndex","focus","selector","default","CheckboxInput","margin","opacity","cursor","CheckboxLabel","flex","minWidth","pointerEvents","defaultCheckedIcon","defaultIndeterminateIcon","Checkbox","forwardRef","inProps","ref","checkedProp","uncheckedIcon","checkedIcon","defaultChecked","disabledExternalProp","id","idOverride","indeterminateIcon","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","value","colorProp","variantProp","sizeProp","component","slotProps","other","formControl","useContext","disabledProp","process","env","NODE_ENV","registerEffect","useEffect","undefined","htmlFor","useCheckboxProps","getInputProps","isCheckboxActive","activeVariant","inactiveVariant","error","activeColor","inactiveColor","classes","externalForwardedProps","SlotRoot","rootProps","className","elementType","SlotCheckbox","checkboxProps","SlotAction","actionProps","SlotInput","inputProps","additionalProps","role","getSlotProps","SlotLabel","labelProps","children","Provider","propTypes","bool","node","string","oneOfType","oneOf","func","shape","object","sx","arrayOf","number"],"sources":["C:/OtpishiAI/node_modules/@mui/joy/Checkbox/Checkbox.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"uncheckedIcon\", \"checkedIcon\", \"label\", \"defaultChecked\", \"disabled\", \"disableIcon\", \"overlay\", \"id\", \"indeterminate\", \"indeterminateIcon\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"value\", \"color\", \"variant\", \"size\", \"component\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useSwitch } from '@mui/base/useSwitch';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport CheckIcon from '../internal/svg-icons/Check';\nimport IndeterminateIcon from '../internal/svg-icons/HorizontalRule';\nimport { TypographyNestedContext } from '../Typography/Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    disableIcon,\n    focusVisible,\n    color,\n    variant,\n    size,\n    indeterminate\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],\n    checkbox: ['checkbox', checked && 'checked', indeterminate && 'indeterminate', disabled && 'disabled' // disabled class is necessary for displaying global variant\n    ],\n    action: ['action', checked && 'checked', disableIcon && disabled && 'disabled',\n    // add disabled class to action element for displaying global variant\n    focusVisible && 'focusVisible'],\n    input: ['input'],\n    label: ['label']\n  };\n  return composeClasses(slots, getCheckboxUtilityClass, {});\n};\nconst CheckboxRoot = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  '--Icon-fontSize': 'var(--Checkbox-size)'\n}, ownerState.size === 'sm' && {\n  '--Checkbox-size': '1rem',\n  '& ~ *': {\n    '--FormHelperText-margin': '0 0 0 1.5rem'\n  },\n  fontSize: theme.vars.fontSize.sm,\n  gap: 'var(--Checkbox-gap, 0.5rem)'\n}, ownerState.size === 'md' && {\n  '--Checkbox-size': '1.25rem',\n  '& ~ *': {\n    '--FormHelperText-margin': '0.25rem 0 0 1.875rem'\n  },\n  fontSize: theme.vars.fontSize.md,\n  gap: 'var(--Checkbox-gap, 0.625rem)'\n}, ownerState.size === 'lg' && {\n  '--Checkbox-size': '1.5rem',\n  '& ~ *': {\n    '--FormHelperText-margin': '0.375rem 0 0 2.25rem'\n  },\n  fontSize: theme.vars.fontSize.lg,\n  gap: 'var(--Checkbox-gap, 0.75rem)'\n}, {\n  position: ownerState.overlay ? 'initial' : 'relative',\n  display: 'inline-flex',\n  fontFamily: theme.vars.fontFamily.body,\n  lineHeight: 'var(--Checkbox-size)',\n  color: theme.vars.palette.text.primary,\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.variants.plainDisabled?.[ownerState.color]?.color\n  }\n}, ownerState.disableIcon && {\n  color: theme.variants[ownerState.variant]?.[ownerState.color]?.color,\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]?.color\n  }\n}));\nconst CheckboxCheckbox = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Checkbox',\n  overridesResolver: (props, styles) => styles.checkbox\n})(({\n  theme,\n  ownerState\n}) => {\n  const variantStyle = theme.variants[`${ownerState.variant}`]?.[ownerState.color];\n  return [_extends({\n    '--Icon-color': ownerState.color !== 'neutral' || ownerState.variant === 'solid' ? 'currentColor' : theme.vars.palette.text.icon,\n    boxSizing: 'border-box',\n    borderRadius: `min(${theme.vars.radius.sm}, 0.25rem)`,\n    width: 'var(--Checkbox-size)',\n    height: 'var(--Checkbox-size)',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexShrink: 0\n  }, ownerState.disableIcon && {\n    display: 'contents'\n  }, {\n    [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n      '--Icon-color': 'currentColor'\n    }\n  }), ...(!ownerState.disableIcon ? [_extends({}, variantStyle, {\n    backgroundColor: variantStyle?.backgroundColor ?? theme.vars.palette.background.surface\n  }), {\n    '&:hover': {\n      '@media (hover: hover)': theme.variants[`${ownerState.variant}Hover`]?.[ownerState.color]\n    }\n  }, {\n    '&:active': theme.variants[`${ownerState.variant}Active`]?.[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]\n  }] : [])];\n});\nconst CheckboxAction = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})(({\n  theme,\n  ownerState\n}) => [{\n  borderRadius: `var(--Checkbox-actionRadius, ${ownerState.overlay ? 'var(--unstable_actionRadius, inherit)' : 'inherit'})`,\n  textAlign: 'left',\n  // prevent text-align inheritance\n  position: 'absolute',\n  top: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  // clickable on the border and focus outline does not move when checked/unchecked\n  left: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  bottom: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  right: 'calc(-1 * var(--variant-borderWidth, 0px))',\n  zIndex: 1,\n  // The action element usually cover the area of nearest positioned parent\n  [theme.focus.selector]: theme.focus.default\n}, ...(ownerState.disableIcon ? [theme.variants[ownerState.variant]?.[ownerState.color], {\n  '&:hover': theme.variants[`${ownerState.variant}Hover`]?.[ownerState.color]\n}, {\n  '&:active': theme.variants[`${ownerState.variant}Active`]?.[ownerState.color]\n}, {\n  [`&.${checkboxClasses.disabled}`]: theme.variants[`${ownerState.variant}Disabled`]?.[ownerState.color]\n}] : [])]);\nconst CheckboxInput = styled('input', {\n  name: 'JoyCheckbox',\n  slot: 'Input',\n  overridesResolver: (props, styles) => styles.input\n})(() => ({\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n}));\nconst CheckboxLabel = styled('label', {\n  name: 'JoyCheckbox',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(({\n  ownerState\n}) => _extends({\n  flex: 1,\n  minWidth: 0\n}, ownerState.disableIcon && {\n  zIndex: 1,\n  // label should stay on top of the action.\n  pointerEvents: 'none' // makes hover ineffect.\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateIcon, {});\n/**\n *\n * Demos:\n *\n * - [Checkbox](https://mui.com/joy-ui/react-checkbox/)\n *\n * API:\n *\n * - [Checkbox API](https://mui.com/joy-ui/api/checkbox/)\n */\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCheckbox'\n  });\n  const {\n      checked: checkedProp,\n      uncheckedIcon,\n      checkedIcon = defaultCheckedIcon,\n      label,\n      defaultChecked,\n      disabled: disabledExternalProp,\n      disableIcon = false,\n      overlay,\n      id: idOverride,\n      indeterminate = false,\n      indeterminateIcon = defaultIndeterminateIcon,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      onFocusVisible,\n      readOnly,\n      required,\n      value,\n      color: colorProp,\n      variant: variantProp,\n      size: sizeProp = 'md',\n      component,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const formControl = React.useContext(FormControlContext);\n  const disabledProp = inProps.disabled ?? formControl?.disabled ?? disabledExternalProp;\n  const size = inProps.size ?? formControl?.size ?? sizeProp;\n  if (process.env.NODE_ENV !== 'production') {\n    const registerEffect = formControl?.registerEffect;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (registerEffect) {\n        return registerEffect();\n      }\n      return undefined;\n    }, [registerEffect]);\n  }\n  const id = useId(idOverride ?? formControl?.htmlFor);\n  const useCheckboxProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible\n  } = useSwitch(useCheckboxProps);\n  const isCheckboxActive = checked || indeterminate;\n  const activeVariant = variantProp || 'solid';\n  const inactiveVariant = variantProp || 'outlined';\n  const variant = isCheckboxActive ? activeVariant : inactiveVariant;\n  const color = inProps.color || (formControl?.error ? 'danger' : formControl?.color ?? colorProp);\n  const activeColor = color || 'primary';\n  const inactiveColor = color || 'neutral';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableIcon,\n    overlay,\n    focusVisible,\n    color: isCheckboxActive ? activeColor : inactiveColor,\n    variant,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CheckboxRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotCheckbox, checkboxProps] = useSlot('checkbox', {\n    className: classes.checkbox,\n    elementType: CheckboxCheckbox,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotAction, actionProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CheckboxAction,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotInput, inputProps] = useSlot('input', {\n    additionalProps: _extends({\n      id,\n      name,\n      value,\n      readOnly,\n      role: undefined,\n      required: required ?? formControl?.required,\n      'aria-describedby': formControl?.['aria-describedby']\n    }, indeterminate && {\n      // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked#values\n      'aria-checked': 'mixed'\n    }),\n    className: classes.input,\n    elementType: CheckboxInput,\n    externalForwardedProps,\n    getSlotProps: getInputProps,\n    ownerState\n  });\n  const [SlotLabel, labelProps] = useSlot('label', {\n    additionalProps: {\n      htmlFor: id\n    },\n    className: classes.label,\n    elementType: CheckboxLabel,\n    externalForwardedProps,\n    ownerState\n  });\n  let icon = uncheckedIcon;\n  if (disableIcon) {\n    icon = null;\n  } else if (indeterminate) {\n    icon = indeterminateIcon;\n  } else if (checked) {\n    icon = checkedIcon;\n  }\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotCheckbox, _extends({}, checkboxProps, {\n      children: [/*#__PURE__*/_jsx(SlotAction, _extends({}, actionProps, {\n        children: /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))\n      })), icon]\n    })), label && /*#__PURE__*/_jsx(TypographyNestedContext.Provider, {\n      value: true,\n      children: /*#__PURE__*/_jsx(SlotLabel, _extends({}, labelProps, {\n        children: label\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the checked icon is removed and the selected variant is applied on the `action` element instead.\n   * @default false\n   */\n  disableIcon: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * The label element next to the checkbox.\n   */\n  label: PropTypes.node,\n  /**\n   * The `name` attribute of the input.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the root element's position is set to initial which allows the action area to fill the nearest positioned parent.\n   * This prop is useful for composing Checkbox with ListItem component.\n   * @default false\n   */\n  overlay: PropTypes.bool,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    checkbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    label: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    checkbox: PropTypes.elementType,\n    input: PropTypes.elementType,\n    label: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The icon when `checked` is false.\n   */\n  uncheckedIcon: PropTypes.node,\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'solid'\n   */\n  variant: PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid'])\n} : void 0;\nexport default Checkbox;"],"mappings":"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"},"metadata":{},"sourceType":"module"}