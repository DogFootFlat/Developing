{"ast":null,"code":"var _jsxFileName = \"C:\\\\OtpishiAI\\\\src\\\\components\\\\product\\\\cart\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\n// Cart.jsx\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Typography, Box } from '@mui/material';\nimport CartContext from '../../../store/cart-context';\nimport CartItem from './CartItem';\nimport Modal from '../UI/Modal';\nimport classes from './css/Cart.module.css';\nimport ApiService from '../../../ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [cartItems, setCartItems] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchCartItems();\n  }, []);\n\n  const fetchCartItems = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await ApiService.fetchCartList();\n      setCartItems(response.data.cartDTOS);\n      setTotalAmount(calculateTotalAmount(response.data.cartDTOS));\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        // 비로그인 상태일 경우 로컬 스토리지에서 장바구니 정보 가져오기\n        const localCartItems = JSON.parse(localStorage.getItem('cartItems') || '[]');\n        setCartItems(localCartItems);\n        setTotalAmount(calculateTotalAmount(localCartItems));\n      } else {\n        setError('장바구니를 불러오는데 실패했습니다.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const calculateTotalAmount = items => {\n    return items.reduce((total, item) => total + item.totalPrice, 0);\n  };\n\n  const cartItemRemoveHandler = async cartNum => {\n    try {\n      await ApiService.removeFromCart(cartNum);\n      fetchCartItems(); // 장바구니 목록 새로고침\n    } catch (error) {\n      setError('상품 삭제에 실패했습니다.');\n    }\n  };\n\n  const cartItemAddHandler = async item => {\n    try {\n      if (item.detailCode) {\n        await ApiService.addToCartDetail(item.detailCode, 1);\n      } else {\n        await ApiService.addToCart(item.productNum, 1);\n      }\n\n      fetchCartItems(); // 장바구니 목록 새로고침\n    } catch (error) {\n      setError('상품 추가에 실패했습니다.');\n    }\n  };\n\n  const cartItemDecreaseHandler = async cartNum => {\n    try {\n      await ApiService.decreaseCartItem(cartNum);\n      fetchCartItems(); // 장바구니 목록 새로고침\n    } catch (error) {\n      setError('상품 수량 감소에 실패했습니다.');\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  const cartItemsList = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.productName,\n      amount: item.quantity,\n      price: item.totalPrice,\n      onRemove: () => cartItemRemoveHandler(item.cartNum),\n      onAdd: () => cartItemAddHandler(item),\n      onDecrease: () => cartItemDecreaseHandler(item.cartNum)\n    }, item.cartNum, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItemsList, /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [totalAmount.toLocaleString(), \" \\uC6D0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: classes['button--alt'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        variant: \"contained\",\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"33WS9azHMWaRaLkwd+Cd/VdcfQI=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Button","Typography","Box","CartContext","CartItem","Modal","classes","ApiService","Cart","props","cartItems","setCartItems","totalAmount","setTotalAmount","isLoading","setIsLoading","error","setError","fetchCartItems","response","fetchCartList","data","cartDTOS","calculateTotalAmount","status","localCartItems","JSON","parse","localStorage","getItem","items","reduce","total","item","totalPrice","cartItemRemoveHandler","cartNum","removeFromCart","cartItemAddHandler","detailCode","addToCartDetail","addToCart","productNum","cartItemDecreaseHandler","decreaseCartItem","cartItemsList","map","productName","quantity","onClose","toLocaleString","actions","length","button"],"sources":["C:/OtpishiAI/src/components/product/cart/Cart.jsx"],"sourcesContent":["// Cart.jsx\r\n\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Typography, Box } from '@mui/material';\r\nimport CartContext from '../../../store/cart-context';\r\nimport CartItem from './CartItem';\r\nimport Modal from '../UI/Modal';\r\nimport classes from './css/Cart.module.css';\r\nimport ApiService from '../../../ApiService';\r\n\r\nconst Cart = (props) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n  const fetchCartItems = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await ApiService.fetchCartList();\r\n      setCartItems(response.data.cartDTOS);\r\n      setTotalAmount(calculateTotalAmount(response.data.cartDTOS));\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 401) {\r\n        // 비로그인 상태일 경우 로컬 스토리지에서 장바구니 정보 가져오기\r\n        const localCartItems = JSON.parse(localStorage.getItem('cartItems') || '[]');\r\n        setCartItems(localCartItems);\r\n        setTotalAmount(calculateTotalAmount(localCartItems));\r\n      } else {\r\n        setError('장바구니를 불러오는데 실패했습니다.');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateTotalAmount = (items) => {\r\n    return items.reduce((total, item) => total + item.totalPrice, 0);\r\n  };\r\n\r\n  const cartItemRemoveHandler = async (cartNum) => {\r\n    try {\r\n      await ApiService.removeFromCart(cartNum);\r\n      fetchCartItems(); // 장바구니 목록 새로고침\r\n    } catch (error) {\r\n      setError('상품 삭제에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const cartItemAddHandler = async (item) => {\r\n    try {\r\n      if (item.detailCode) {\r\n        await ApiService.addToCartDetail(item.detailCode, 1);\r\n      } else {\r\n        await ApiService.addToCart(item.productNum, 1);\r\n      }\r\n      fetchCartItems(); // 장바구니 목록 새로고침\r\n    } catch (error) {\r\n      setError('상품 추가에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const cartItemDecreaseHandler = async (cartNum) => {\r\n    try {\r\n      await ApiService.decreaseCartItem(cartNum);\r\n      fetchCartItems(); // 장바구니 목록 새로고침\r\n    } catch (error) {\r\n      setError('상품 수량 감소에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  const cartItemsList = (\r\n    <ul className={classes['cart-items']}>\r\n      {cartItems.map((item) => (\r\n        <CartItem\r\n          key={item.cartNum}\r\n          name={item.productName}\r\n          amount={item.quantity}\r\n          price={item.totalPrice}\r\n          onRemove={() => cartItemRemoveHandler(item.cartNum)}\r\n          onAdd={() => cartItemAddHandler(item)}\r\n          onDecrease={() => cartItemDecreaseHandler(item.cartNum)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {cartItemsList}\r\n      <Box className={classes.total}>\r\n        <Typography variant=\"h6\">Total Amount</Typography>\r\n        <Typography variant=\"h6\">{totalAmount.toLocaleString()} 원</Typography>\r\n      </Box>\r\n      <Box className={classes.actions}>\r\n        <Button className={classes['button--alt']} onClick={props.onClose}>\r\n          Close\r\n        </Button>\r\n        {cartItems.length > 0 && (\r\n          <Button className={classes.button} variant=\"contained\">\r\n            Order\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}