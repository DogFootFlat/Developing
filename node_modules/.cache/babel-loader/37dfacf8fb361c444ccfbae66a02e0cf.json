{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport GlobalStyles from '../GlobalStyles';\nimport defaultTheme from '../styles/defaultTheme';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n *\n * Demos:\n *\n * - [CSS Baseline](https://mui.com/joy-ui/react-css-baseline/)\n *\n * API:\n *\n * - [CssBaseline API](https://mui.com/joy-ui/api/css-baseline/)\n */\n\nfunction CssBaseline(props) {\n  const {\n    children,\n    disableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => {\n        const colorSchemeStyles = {};\n\n        if (!disableColorScheme) {\n          // The CssBaseline is wrapped inside a CssVarsProvider\n          Object.entries(theme.colorSchemes).forEach(_ref => {\n            let [key, scheme] = _ref;\n            colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n              colorScheme: scheme.palette?.mode\n            };\n          });\n        }\n\n        const defaultTypographyLevel = theme.components?.JoyTypography?.defaultProps?.level ?? 'body-md';\n        return _extends({\n          html: {\n            WebkitFontSmoothing: 'antialiased',\n            MozOsxFontSmoothing: 'grayscale',\n            // Change from `box-sizing: content-box` so that `width`\n            // is not affected by `padding` or `border`.\n            boxSizing: 'border-box',\n            // Fix font resize problem in iOS\n            WebkitTextSizeAdjust: '100%'\n          },\n          '*, *::before, *::after': {\n            boxSizing: 'inherit'\n          },\n          'strong, b': {\n            fontWeight: theme.vars.fontWeight.lg\n          },\n          body: _extends({\n            margin: 0,\n            // Remove the margin in all browsers.\n            color: theme.vars.palette.text.primary,\n            fontFamily: theme.vars.fontFamily.body\n          }, theme.typography[defaultTypographyLevel], {\n            backgroundColor: theme.vars.palette.background.body,\n            '@media print': {\n              // Save printer ink.\n              backgroundColor: theme.vars.palette.common.white\n            },\n            // Add support for document.body.requestFullScreen().\n            // Other elements, if background transparent, are not supported.\n            '&::backdrop': {\n              backgroundColor: theme.vars.palette.background.backdrop\n            }\n          })\n        }, colorSchemeStyles);\n      },\n      defaultTheme: defaultTheme\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable `color-scheme` CSS property.\n   *\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  disableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","map":{"version":3,"names":["_extends","React","PropTypes","GlobalStyles","defaultTheme","jsx","_jsx","jsxs","_jsxs","CssBaseline","props","children","disableColorScheme","Fragment","styles","theme","colorSchemeStyles","Object","entries","colorSchemes","forEach","key","scheme","getColorSchemeSelector","replace","colorScheme","palette","mode","defaultTypographyLevel","components","JoyTypography","defaultProps","level","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","fontWeight","vars","lg","body","margin","color","text","primary","fontFamily","typography","backgroundColor","background","common","white","backdrop","process","env","NODE_ENV","propTypes","node","bool"],"sources":["C:/OtpishiAI/node_modules/@mui/joy/CssBaseline/CssBaseline.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport GlobalStyles from '../GlobalStyles';\nimport defaultTheme from '../styles/defaultTheme';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n *\n * Demos:\n *\n * - [CSS Baseline](https://mui.com/joy-ui/react-css-baseline/)\n *\n * API:\n *\n * - [CssBaseline API](https://mui.com/joy-ui/api/css-baseline/)\n */\nfunction CssBaseline(props) {\n  const {\n    children,\n    disableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => {\n        const colorSchemeStyles = {};\n        if (!disableColorScheme) {\n          // The CssBaseline is wrapped inside a CssVarsProvider\n          Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n            colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n              colorScheme: scheme.palette?.mode\n            };\n          });\n        }\n        const defaultTypographyLevel = theme.components?.JoyTypography?.defaultProps?.level ?? 'body-md';\n        return _extends({\n          html: {\n            WebkitFontSmoothing: 'antialiased',\n            MozOsxFontSmoothing: 'grayscale',\n            // Change from `box-sizing: content-box` so that `width`\n            // is not affected by `padding` or `border`.\n            boxSizing: 'border-box',\n            // Fix font resize problem in iOS\n            WebkitTextSizeAdjust: '100%'\n          },\n          '*, *::before, *::after': {\n            boxSizing: 'inherit'\n          },\n          'strong, b': {\n            fontWeight: theme.vars.fontWeight.lg\n          },\n          body: _extends({\n            margin: 0,\n            // Remove the margin in all browsers.\n            color: theme.vars.palette.text.primary,\n            fontFamily: theme.vars.fontFamily.body\n          }, theme.typography[defaultTypographyLevel], {\n            backgroundColor: theme.vars.palette.background.body,\n            '@media print': {\n              // Save printer ink.\n              backgroundColor: theme.vars.palette.common.white\n            },\n            // Add support for document.body.requestFullScreen().\n            // Other elements, if background transparent, are not supported.\n            '&::backdrop': {\n              backgroundColor: theme.vars.palette.background.backdrop\n            }\n          })\n        }, colorSchemeStyles);\n      },\n      defaultTheme: defaultTheme\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Disable `color-scheme` CSS property.\n   *\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  disableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"],"mappings":"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"},"metadata":{},"sourceType":"module"}