{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  DecodeError: null,\n  MiddlewareNotFoundError: null,\n  MissingStaticPage: null,\n  NormalizeError: null,\n  PageNotFoundError: null,\n  SP: null,\n  ST: null,\n  WEB_VITALS: null,\n  execOnce: null,\n  getDisplayName: null,\n  getLocationOrigin: null,\n  getURL: null,\n  isAbsoluteUrl: null,\n  isResSent: null,\n  loadGetInitialProps: null,\n  normalizeRepeatedSlashes: null,\n  stringifyError: null\n});\n\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n\n_export(exports, {\n  DecodeError: function () {\n    return DecodeError;\n  },\n  MiddlewareNotFoundError: function () {\n    return MiddlewareNotFoundError;\n  },\n  MissingStaticPage: function () {\n    return MissingStaticPage;\n  },\n  NormalizeError: function () {\n    return NormalizeError;\n  },\n  PageNotFoundError: function () {\n    return PageNotFoundError;\n  },\n  SP: function () {\n    return SP;\n  },\n  ST: function () {\n    return ST;\n  },\n  WEB_VITALS: function () {\n    return WEB_VITALS;\n  },\n  execOnce: function () {\n    return execOnce;\n  },\n  getDisplayName: function () {\n    return getDisplayName;\n  },\n  getLocationOrigin: function () {\n    return getLocationOrigin;\n  },\n  getURL: function () {\n    return getURL;\n  },\n  isAbsoluteUrl: function () {\n    return isAbsoluteUrl;\n  },\n  isResSent: function () {\n    return isResSent;\n  },\n  loadGetInitialProps: function () {\n    return loadGetInitialProps;\n  },\n  normalizeRepeatedSlashes: function () {\n    return normalizeRepeatedSlashes;\n  },\n  stringifyError: function () {\n    return stringifyError;\n  }\n});\n\nconst WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'];\n\nfunction execOnce(fn) {\n  let used = false;\n  let result;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!used) {\n      used = true;\n      result = fn(...args);\n    }\n\n    return result;\n  };\n} // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n\n\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\n\nconst isAbsoluteUrl = url => ABSOLUTE_URL_REGEX.test(url);\n\nfunction getLocationOrigin() {\n  const {\n    protocol,\n    hostname,\n    port\n  } = window.location;\n  return protocol + \"//\" + hostname + (port ? ':' + port : '');\n}\n\nfunction getURL() {\n  const {\n    href\n  } = window.location;\n  const origin = getLocationOrigin();\n  return href.substring(origin.length);\n}\n\nfunction getDisplayName(Component) {\n  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';\n}\n\nfunction isResSent(res) {\n  return res.finished || res.headersSent;\n}\n\nfunction normalizeRepeatedSlashes(url) {\n  const urlParts = url.split('?');\n  const urlNoQuery = urlParts[0];\n  return urlNoQuery // first we replace any non-encoded backslashes with forward\n  // then normalize repeated forward slashes\n  .replace(/\\\\/g, '/').replace(/\\/\\/+/g, '/') + (urlParts[1] ? \"?\" + urlParts.slice(1).join('?') : '');\n}\n\nasync function loadGetInitialProps(App, ctx) {\n  if (process.env.NODE_ENV !== 'production') {\n    var _App_prototype;\n\n    if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {\n      const message = '\"' + getDisplayName(App) + '.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';\n      throw new Error(message);\n    }\n  } // when called from _app `ctx` is nested in `ctx`\n\n\n  const res = ctx.res || ctx.ctx && ctx.ctx.res;\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)\n      };\n    }\n\n    return {};\n  }\n\n  const props = await App.getInitialProps(ctx);\n\n  if (res && isResSent(res)) {\n    return props;\n  }\n\n  if (!props) {\n    const message = '\"' + getDisplayName(App) + '.getInitialProps()\" should resolve to an object. But found \"' + props + '\" instead.';\n    throw new Error(message);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\"\" + getDisplayName(App) + \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\");\n    }\n  }\n\n  return props;\n}\n\nconst SP = typeof performance !== 'undefined';\nconst ST = SP && ['mark', 'measure', 'getEntriesByName'].every(method => typeof performance[method] === 'function');\n\nclass DecodeError extends Error {}\n\nclass NormalizeError extends Error {}\n\nclass PageNotFoundError extends Error {\n  constructor(page) {\n    super();\n    this.code = 'ENOENT';\n    this.name = 'PageNotFoundError';\n    this.message = \"Cannot find module for page: \" + page;\n  }\n\n}\n\nclass MissingStaticPage extends Error {\n  constructor(page, message) {\n    super();\n    this.message = \"Failed to load static file for page: \" + page + \" \" + message;\n  }\n\n}\n\nclass MiddlewareNotFoundError extends Error {\n  constructor() {\n    super();\n    this.code = 'ENOENT';\n    this.message = \"Cannot find the middleware module\";\n  }\n\n}\n\nfunction stringifyError(error) {\n  return JSON.stringify({\n    message: error.message,\n    stack: error.stack\n  });\n}","map":{"version":3,"mappings":"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","names":["DecodeError","MiddlewareNotFoundError","MissingStaticPage","NormalizeError","PageNotFoundError","SP","ST","WEB_VITALS","execOnce","getDisplayName","getLocationOrigin","getURL","isAbsoluteUrl","isResSent","loadGetInitialProps","normalizeRepeatedSlashes","stringifyError","fn","used","result","args","ABSOLUTE_URL_REGEX","url","test","protocol","hostname","port","window","location","href","origin","substring","length","Component","displayName","name","res","finished","headersSent","urlParts","split","urlNoQuery","replace","slice","join","App","ctx","process","env","NODE_ENV","prototype","getInitialProps","message","Error","pageProps","props","Object","keys","console","warn","performance","every","method","constructor","page","code","error","JSON","stringify","stack"],"sources":["C:\\OtpishiAI\\node_modules\\next\\src\\shared\\lib\\utils.ts"],"sourcesContent":["import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration#on-demand-revalidation\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n"]},"metadata":{},"sourceType":"script"}