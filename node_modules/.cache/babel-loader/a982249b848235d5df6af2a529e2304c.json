{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useFormControlContext } from '../FormControl';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\n/**\n *\n * Demos:\n *\n * - [Input](https://mui.com/base-ui/react-input/#hook)\n *\n * API:\n *\n * - [useInput API](https://mui.com/base-ui/react-input/hooks-api/#use-input)\n */\n\nexport function useInput() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    defaultValue: defaultValueProp,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onChange,\n    onFocus,\n    required: requiredProp = false,\n    value: valueProp,\n    inputRef: inputRefProp\n  } = parameters;\n  const formControlContext = useFormControlContext();\n  let defaultValue;\n  let disabled;\n  let error;\n  let required;\n  let value;\n\n  if (formControlContext) {\n    defaultValue = undefined;\n    disabled = formControlContext.disabled ?? false;\n    error = formControlContext.error ?? false;\n    required = formControlContext.required ?? false;\n    value = formControlContext.value;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const definedLocalProps = ['defaultValue', 'disabled', 'error', 'required', 'value'].filter(prop => parameters[prop] !== undefined);\n\n      if (definedLocalProps.length > 0) {\n        console.warn(['MUI: You have set props on an input that is inside a FormControl.', 'Set these props on a FormControl instead. Otherwise they will be ignored.', `Ignored props: ${definedLocalProps.join(', ')}`].join('\\n'));\n      }\n    }\n  } else {\n    defaultValue = defaultValueProp;\n    disabled = disabledProp;\n    error = errorProp;\n    required = requiredProp;\n    value = valueProp;\n  }\n\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `slots.input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const inputRef = React.useRef(null);\n  const handleInputRef = useForkRef(inputRef, inputRefProp, handleInputRefWarning);\n  const [focused, setFocused] = React.useState(false); // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!formControlContext && disabled && focused) {\n      setFocused(false); // @ts-ignore\n\n      onBlur?.();\n    }\n  }, [formControlContext, disabled, focused, onBlur]);\n\n  const handleFocus = otherHandlers => event => {\n    // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the component is disabled.\n    if (formControlContext?.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    otherHandlers.onFocus?.(event);\n\n    if (formControlContext && formControlContext.onFocus) {\n      formControlContext?.onFocus?.();\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = otherHandlers => event => {\n    otherHandlers.onBlur?.(event);\n\n    if (formControlContext && formControlContext.onBlur) {\n      formControlContext.onBlur();\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = otherHandlers => function (event) {\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`slots.input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n      }\n    }\n\n    formControlContext?.onChange?.(event); // @ts-ignore\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    otherHandlers.onChange?.(event, ...args);\n  };\n\n  const handleClick = otherHandlers => event => {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    otherHandlers.onClick?.(event);\n  };\n\n  const getRootProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // onBlur, onChange and onFocus are forwarded to the input slot.\n    const propsEventHandlers = extractEventHandlers(parameters, ['onBlur', 'onChange', 'onFocus']);\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    return _extends({}, externalProps, externalEventHandlers, {\n      onClick: handleClick(externalEventHandlers)\n    });\n  };\n\n  const getInputProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const propsEventHandlers = {\n      onBlur,\n      onChange,\n      onFocus\n    };\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    const mergedEventHandlers = _extends({}, externalEventHandlers, {\n      onBlur: handleBlur(externalEventHandlers),\n      onChange: handleChange(externalEventHandlers),\n      onFocus: handleFocus(externalEventHandlers)\n    });\n\n    return _extends({}, mergedEventHandlers, {\n      'aria-invalid': error || undefined,\n      defaultValue: defaultValue,\n      value: value,\n      required,\n      disabled\n    }, externalProps, {\n      ref: handleInputRef\n    }, mergedEventHandlers);\n  };\n\n  return {\n    disabled,\n    error,\n    focused,\n    formControlContext,\n    getInputProps,\n    getRootProps,\n    inputRef: handleInputRef,\n    required,\n    value\n  };\n}","map":{"version":3,"names":["_extends","_formatMuiErrorMessage","React","unstable_useForkRef","useForkRef","useFormControlContext","extractEventHandlers","useInput","parameters","defaultValue","defaultValueProp","disabled","disabledProp","error","errorProp","onBlur","onChange","onFocus","required","requiredProp","value","valueProp","inputRef","inputRefProp","formControlContext","undefined","process","env","NODE_ENV","definedLocalProps","filter","prop","length","console","warn","join","current","isControlled","useRef","handleInputRefWarning","useCallback","instance","nodeName","focus","handleInputRef","focused","setFocused","useState","useEffect","handleFocus","otherHandlers","event","stopPropagation","handleBlur","handleChange","element","target","Error","args","handleClick","currentTarget","onClick","getRootProps","externalProps","propsEventHandlers","externalEventHandlers","getInputProps","mergedEventHandlers","ref"],"sources":["C:/OtpishiAI/node_modules/@mui/joy/node_modules/@mui/base/useInput/useInput.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useFormControlContext } from '../FormControl';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\n/**\n *\n * Demos:\n *\n * - [Input](https://mui.com/base-ui/react-input/#hook)\n *\n * API:\n *\n * - [useInput API](https://mui.com/base-ui/react-input/hooks-api/#use-input)\n */\nexport function useInput(parameters = {}) {\n  const {\n    defaultValue: defaultValueProp,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onChange,\n    onFocus,\n    required: requiredProp = false,\n    value: valueProp,\n    inputRef: inputRefProp\n  } = parameters;\n  const formControlContext = useFormControlContext();\n  let defaultValue;\n  let disabled;\n  let error;\n  let required;\n  let value;\n  if (formControlContext) {\n    defaultValue = undefined;\n    disabled = formControlContext.disabled ?? false;\n    error = formControlContext.error ?? false;\n    required = formControlContext.required ?? false;\n    value = formControlContext.value;\n    if (process.env.NODE_ENV !== 'production') {\n      const definedLocalProps = ['defaultValue', 'disabled', 'error', 'required', 'value'].filter(prop => parameters[prop] !== undefined);\n      if (definedLocalProps.length > 0) {\n        console.warn(['MUI: You have set props on an input that is inside a FormControl.', 'Set these props on a FormControl instead. Otherwise they will be ignored.', `Ignored props: ${definedLocalProps.join(', ')}`].join('\\n'));\n      }\n    }\n  } else {\n    defaultValue = defaultValueProp;\n    disabled = disabledProp;\n    error = errorProp;\n    required = requiredProp;\n    value = valueProp;\n  }\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `slots.input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const inputRef = React.useRef(null);\n  const handleInputRef = useForkRef(inputRef, inputRefProp, handleInputRefWarning);\n  const [focused, setFocused] = React.useState(false);\n\n  // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n  React.useEffect(() => {\n    if (!formControlContext && disabled && focused) {\n      setFocused(false);\n\n      // @ts-ignore\n      onBlur?.();\n    }\n  }, [formControlContext, disabled, focused, onBlur]);\n  const handleFocus = otherHandlers => event => {\n    // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the component is disabled.\n    if (formControlContext?.disabled) {\n      event.stopPropagation();\n      return;\n    }\n    otherHandlers.onFocus?.(event);\n    if (formControlContext && formControlContext.onFocus) {\n      formControlContext?.onFocus?.();\n    } else {\n      setFocused(true);\n    }\n  };\n  const handleBlur = otherHandlers => event => {\n    otherHandlers.onBlur?.(event);\n    if (formControlContext && formControlContext.onBlur) {\n      formControlContext.onBlur();\n    } else {\n      setFocused(false);\n    }\n  };\n  const handleChange = otherHandlers => (event, ...args) => {\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`slots.input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n      }\n    }\n    formControlContext?.onChange?.(event);\n\n    // @ts-ignore\n    otherHandlers.onChange?.(event, ...args);\n  };\n  const handleClick = otherHandlers => event => {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n    otherHandlers.onClick?.(event);\n  };\n  const getRootProps = (externalProps = {}) => {\n    // onBlur, onChange and onFocus are forwarded to the input slot.\n    const propsEventHandlers = extractEventHandlers(parameters, ['onBlur', 'onChange', 'onFocus']);\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n    return _extends({}, externalProps, externalEventHandlers, {\n      onClick: handleClick(externalEventHandlers)\n    });\n  };\n  const getInputProps = (externalProps = {}) => {\n    const propsEventHandlers = {\n      onBlur,\n      onChange,\n      onFocus\n    };\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n    const mergedEventHandlers = _extends({}, externalEventHandlers, {\n      onBlur: handleBlur(externalEventHandlers),\n      onChange: handleChange(externalEventHandlers),\n      onFocus: handleFocus(externalEventHandlers)\n    });\n    return _extends({}, mergedEventHandlers, {\n      'aria-invalid': error || undefined,\n      defaultValue: defaultValue,\n      value: value,\n      required,\n      disabled\n    }, externalProps, {\n      ref: handleInputRef\n    }, mergedEventHandlers);\n  };\n  return {\n    disabled,\n    error,\n    focused,\n    formControlContext,\n    getInputProps,\n    getRootProps,\n    inputRef: handleInputRef,\n    required,\n    value\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}