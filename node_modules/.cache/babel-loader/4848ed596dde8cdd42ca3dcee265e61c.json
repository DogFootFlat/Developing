{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"detectDomainLocale\", {\n  enumerable: true,\n  get: function () {\n    return detectDomainLocale;\n  }\n});\n\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n  if (!domainItems) return;\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase();\n  }\n\n  for (const item of domainItems) {\n    var _item_domain, _item_locales; // remove port if present\n\n\n    const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(':', 1)[0].toLowerCase();\n\n    if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some(locale => locale.toLowerCase() === detectedLocale))) {\n      return item;\n    }\n  }\n}","map":{"version":3,"mappings":";;;;;+BAEgBA;kBAAAA;;WAAAA;;AAAAA;;AAAT,SAASA,kBAAT,CACLC,WADK,EAELC,QAFK,EAGLC,cAHK,EAGkB;EAEvB,IAAI,CAACF,WAAL,EAAkB;;EAElB,IAAIE,cAAJ,EAAoB;IAClBA,iBAAiBA,eAAeC,WAAfD,EAAjBA;EACF;;EAEA,KAAK,MAAME,IAAX,IAAmBJ,WAAnB,EAAgC;QAEPI,cAIrBA,cAN4B,CAC9B;;;IACA,MAAMC,kBAAiBD,oBAAKE,MAAtBD,KAA4B,IAA5BA,GAA4B,MAA5BA,GAAiBD,aAAaG,KAAbH,CAAmB,GAAnBA,EAAwB,CAAxBA,EAA2B,CAA3BA,EAA8BD,WAA9BC,EAAvB;;IACA,IACEH,aAAaI,cAAbJ,IACAC,mBAAmBE,KAAKI,aAALJ,CAAmBD,WAAnBC,EADnBH,KACiD,CACjDG,qBAAKK,OAD4C,KACrC,IADqC,GACrC,MADqC,GACjDL,cAAcM,IAAdN,CAAoBO,MAAD,IAAYA,OAAOR,WAAPQ,OAAyBT,cAAxDE,CAFAH,CADF,EAIE;MACA,OAAOG,IAAP;IACF;EACF;AACF","names":["detectDomainLocale","domainItems","hostname","detectedLocale","toLowerCase","item","domainHostname","domain","split","defaultLocale","locales","some","locale"],"sources":["C:\\OtpishiAI\\node_modules\\next\\src\\shared\\lib\\i18n\\detect-domain-locale.ts"],"sourcesContent":["import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}