{"ast":null,"code":"import SmartToyIcon from'@mui/icons-material/SmartToy';import IconButton from'@mui/material/IconButton';import{useEffect,useState}from'react';import Sidebar from'../basic/SideBar';import Header from'../layout/Header';import Cart from'./cart/Cart';import classes from'./css/ProdList.module.css';import Products from'./products/Products';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProdList(){const[cartIsShown,setCartIsShown]=useState(false);const[sidebarIsVisible,setSidebarIsVisible]=useState(false);const[htmlContent,setHtmlContent]=useState('');// 외부 HTML 파일을 가져오기 위한 useEffect\nuseEffect(()=>{if(sidebarIsVisible){fetch('/chatbot.html')// public 폴더 내 chatbot.html\n.then(response=>response.text()).then(data=>{const parser=new DOMParser();const doc=parser.parseFromString(data,'text/html');// 1. <head>의 스타일 태그 및 링크 태그 추출\nconst headElements=doc.head.querySelectorAll('style, link[rel=\"stylesheet\"]');// 2. 추출한 스타일 요소들을 <head>에 추가\nheadElements.forEach(element=>{document.head.appendChild(element.cloneNode(true));});// 3. <body>의 콘텐츠만 추출\nconst bodyContent=doc.body.innerHTML;setHtmlContent(bodyContent);// 4. <script> 태그 추출 및 실행\nconst scriptElements=doc.body.querySelectorAll('script');scriptElements.forEach(script=>{const newScript=document.createElement('script');if(script.src){newScript.src=script.src;// 외부 스크립트일 경우 src 복사\n}else{newScript.textContent=script.textContent;// 인라인 스크립트일 경우 내용 복사\n}document.body.appendChild(newScript);// 스크립트 실행\n});}).catch(error=>console.error('Failed to load chatbot.html:',error));}document.body.style.overflow=sidebarIsVisible?'hidden':'auto';// Cleanup 함수에서 사이드바가 닫힐 때 스크롤 복원\nreturn()=>{document.body.style.overflow='auto';// 사이드바가 닫힐 때 스크롤 복원\n};},[sidebarIsVisible]);const showCartHandler=()=>{setCartIsShown(true);};const toggleSidebar=()=>{setSidebarIsVisible(prev=>!prev);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{cartIsShown:cartIsShown,setCartIsShown:setCartIsShown,onShowCart:showCartHandler}),/*#__PURE__*/_jsx(\"main\",{className:classes.main,children:/*#__PURE__*/_jsx(Products,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:toggleSidebar,sx:{position:'fixed',right:'30px',bottom:'30px',width:'30px',height:'30px'},children:/*#__PURE__*/_jsx(SmartToyIcon,{color:\"primary\"})}),/*#__PURE__*/_jsx(Sidebar,{isVisible:sidebarIsVisible,content:/*#__PURE__*/_jsx(\"div\",{className:classes['sidebar-content'],dangerouslySetInnerHTML:{__html:htmlContent}}),onClose:toggleSidebar})]});}export default ProdList;","map":{"version":3,"names":["SmartToyIcon","IconButton","useEffect","useState","Sidebar","Header","Cart","classes","Products","ProdList","cartIsShown","setCartIsShown","sidebarIsVisible","setSidebarIsVisible","htmlContent","setHtmlContent","fetch","then","response","text","data","parser","DOMParser","doc","parseFromString","headElements","head","querySelectorAll","forEach","element","document","appendChild","cloneNode","bodyContent","body","innerHTML","scriptElements","script","newScript","createElement","src","textContent","catch","error","console","style","overflow","showCartHandler","toggleSidebar","prev","main","position","right","bottom","width","height","__html"],"sources":["C:/OtpishiAI/src/components/product/ProdList.jsx"],"sourcesContent":["import SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useEffect, useState } from 'react';\r\nimport Sidebar from '../basic/SideBar';\r\nimport Header from '../layout/Header';\r\nimport Cart from './cart/Cart';\r\nimport classes from './css/ProdList.module.css';\r\nimport Products from './products/Products';\r\n\r\nfunction ProdList() {\r\n  const [cartIsShown, setCartIsShown] = useState(false);\r\n  const [sidebarIsVisible, setSidebarIsVisible] = useState(false);\r\n  const [htmlContent, setHtmlContent] = useState('');\r\n\r\n  // 외부 HTML 파일을 가져오기 위한 useEffect\r\n  useEffect(() => {\r\n    if (sidebarIsVisible) {\r\n      fetch('/chatbot.html') // public 폴더 내 chatbot.html\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(data, 'text/html');\r\n\r\n          // 1. <head>의 스타일 태그 및 링크 태그 추출\r\n          const headElements = doc.head.querySelectorAll('style, link[rel=\"stylesheet\"]');\r\n\r\n          // 2. 추출한 스타일 요소들을 <head>에 추가\r\n          headElements.forEach((element) => {\r\n            document.head.appendChild(element.cloneNode(true));\r\n          });\r\n\r\n          // 3. <body>의 콘텐츠만 추출\r\n          const bodyContent = doc.body.innerHTML;\r\n          setHtmlContent(bodyContent);\r\n\r\n          // 4. <script> 태그 추출 및 실행\r\n          const scriptElements = doc.body.querySelectorAll('script');\r\n          scriptElements.forEach((script) => {\r\n            const newScript = document.createElement('script');\r\n            if (script.src) {\r\n              newScript.src = script.src; // 외부 스크립트일 경우 src 복사\r\n            } else {\r\n              newScript.textContent = script.textContent; // 인라인 스크립트일 경우 내용 복사\r\n            }\r\n            document.body.appendChild(newScript); // 스크립트 실행\r\n          });\r\n        })\r\n        .catch((error) => console.error('Failed to load chatbot.html:', error));\r\n    }\r\n\r\n    document.body.style.overflow = sidebarIsVisible ? 'hidden' : 'auto';\r\n\r\n    // Cleanup 함수에서 사이드바가 닫힐 때 스크롤 복원\r\n    return () => {\r\n      document.body.style.overflow = 'auto'; // 사이드바가 닫힐 때 스크롤 복원\r\n    };\r\n  }, [sidebarIsVisible]);\r\n\r\n  const showCartHandler = () => {\r\n    setCartIsShown(true);\r\n  };\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarIsVisible((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header cartIsShown={cartIsShown} setCartIsShown={setCartIsShown} onShowCart={showCartHandler} />\r\n      <main className={classes.main}>\r\n        <Products />\r\n      </main>\r\n\r\n      {/* 아이콘 버튼 */}\r\n      <IconButton\r\n        onClick={toggleSidebar}\r\n        sx={{\r\n          position: 'fixed',\r\n          right: '30px',\r\n          bottom: '30px',\r\n          width: '30px',\r\n          height: '30px',\r\n        }}\r\n      >\r\n        <SmartToyIcon color=\"primary\" />\r\n      </IconButton>\r\n\r\n      {/* 사이드바 모달 */}\r\n      <Sidebar\r\n        isVisible={sidebarIsVisible}\r\n        content={<div className={classes['sidebar-content']} dangerouslySetInnerHTML={{ __html: htmlContent }}></div>}\r\n        onClose={toggleSidebar}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProdList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}