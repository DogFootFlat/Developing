{"ast":null,"code":"var _jsxFileName = \"C:\\\\OtpishiAI\\\\src\\\\components\\\\basic\\\\SideBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './css/SideBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = _ref => {\n  _s();\n\n  let {\n    isVisible,\n    content,\n    onClose\n  } = _ref;\n  const [key, setKey] = useState(0);\n\n  const handleOnClose = () => {\n    setKey(prevKey => prevKey + 1); // 키를 변경하여 컴포넌트를 다시 마운트\n\n    onClose(); // 부모 컴포넌트의 onClose 함수 호출하여 사이드바 닫기\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.sidebar} ${isVisible ? `${classes.visible}` : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['sidebar-button'],\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOnClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"XtItJevWuoZmrh3Cy6Bn6PfYG7w=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","classes","Sidebar","isVisible","content","onClose","key","setKey","handleOnClose","prevKey","sidebar","visible"],"sources":["C:/OtpishiAI/src/components/basic/SideBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport classes from './css/SideBar.module.css';\r\n\r\nconst Sidebar = ({ isVisible, content, onClose }) => {\r\n  const [key, setKey] = useState(0);\r\n\r\n  const handleOnClose = () => {\r\n    setKey(prevKey => prevKey + 1); // 키를 변경하여 컴포넌트를 다시 마운트\r\n    onClose(); // 부모 컴포넌트의 onClose 함수 호출하여 사이드바 닫기\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.sidebar} ${isVisible ? `${classes.visible}` : ''}`}>\r\n      <div className={classes['sidebar-button']}>\r\n        <button onClick={handleOnClose}>X</button>\r\n      </div>\r\n      <div key={key}>{content}</div> {/* 키가 변경될 때마다 콘텐츠가 다시 마운트됨 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,MAAMC,OAAO,GAAG,QAAqC;EAAA;;EAAA,IAApC;IAAEC,SAAF;IAAaC,OAAb;IAAsBC;EAAtB,CAAoC;EACnD,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAD,CAA9B;;EAEA,MAAMQ,aAAa,GAAG,MAAM;IAC1BD,MAAM,CAACE,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAN,CAD0B,CACM;;IAChCJ,OAAO,GAFmB,CAEf;EACZ,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAG,GAAEJ,OAAO,CAACS,OAAQ,IAAGP,SAAS,GAAI,GAAEF,OAAO,CAACU,OAAQ,EAAtB,GAA0B,EAAG,EAA5E;IAAA,wBACE;MAAK,SAAS,EAAEV,OAAO,CAAC,gBAAD,CAAvB;MAAA,uBACE;QAAQ,OAAO,EAAEO,aAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,UAAgBJ;IAAhB,GAAUE,GAAV;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAhBD;;GAAMJ,O;;KAAAA,O;AAkBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}