{"ast":null,"code":"var _jsxFileName = \"C:\\\\OtpishiAI\\\\src\\\\components\\\\product\\\\ProdList.jsx\",\n    _s = $RefreshSig$();\n\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport IconButton from '@mui/material/IconButton';\nimport { useEffect, useState } from 'react';\nimport Sidebar from '../basic/SideBar';\nimport Header from '../layout/Header';\nimport Cart from './cart/Cart';\nimport classes from './css/ProdList.module.css';\nimport Products from './products/Products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProdList() {\n  _s();\n\n  const [cartIsShown, setCartIsShown] = useState(false);\n  const [sidebarIsVisible, setSidebarIsVisible] = useState(false);\n  const [htmlContent, setHtmlContent] = useState(''); // 외부 HTML 파일을 가져오기 위한 useEffect\n\n  useEffect(() => {\n    if (sidebarIsVisible) {\n      fetch('/chatbot.html') // public 폴더 내 chatbot.html\n      .then(response => response.text()).then(data => {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, 'text/html'); // 1. <head>의 스타일 태그 및 링크 태그 추출\n\n        const headElements = doc.head.querySelectorAll('style, link[rel=\"stylesheet\"]'); // 2. 추출한 스타일 요소들을 <head>에 추가\n\n        headElements.forEach(element => {\n          document.head.appendChild(element.cloneNode(true));\n        }); // 3. <body>의 콘텐츠만 추출\n\n        const bodyContent = doc.body.innerHTML;\n        setHtmlContent(bodyContent); // 4. <script> 태그 추출 및 실행\n\n        const scriptElements = doc.body.querySelectorAll('script');\n        scriptElements.forEach(script => {\n          const newScript = document.createElement('script');\n\n          if (script.src) {\n            newScript.src = script.src; // 외부 스크립트일 경우 src 복사\n          } else {\n            newScript.textContent = script.textContent; // 인라인 스크립트일 경우 내용 복사\n          }\n\n          document.body.appendChild(newScript); // 스크립트 실행\n        });\n      }).catch(error => console.error('Failed to load chatbot.html:', error));\n    }\n\n    document.body.style.overflow = sidebarIsVisible ? 'hidden' : 'auto'; // Cleanup 함수에서 사이드바가 닫힐 때 스크롤 복원\n\n    return () => {\n      document.body.style.overflow = 'auto'; // 사이드바가 닫힐 때 스크롤 복원\n    };\n  }, [sidebarIsVisible]);\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n\n  const toggleSidebar = () => {\n    setSidebarIsVisible(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      cartIsShown: cartIsShown,\n      setCartIsShown: setCartIsShown,\n      onShowCart: showCartHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.main,\n      children: /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: toggleSidebar,\n      sx: {\n        position: 'fixed',\n        right: '30px',\n        bottom: '30px',\n        width: '30px',\n        height: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(SmartToyIcon, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isVisible: sidebarIsVisible,\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes['sidebar-content'],\n        dangerouslySetInnerHTML: {\n          __html: htmlContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 18\n      }, this),\n      onClose: toggleSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProdList, \"xsyR7+79ztY+2f8yAe1e45IXko0=\");\n\n_c = ProdList;\nexport default ProdList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProdList\");","map":{"version":3,"names":["SmartToyIcon","IconButton","useEffect","useState","Sidebar","Header","Cart","classes","Products","ProdList","cartIsShown","setCartIsShown","sidebarIsVisible","setSidebarIsVisible","htmlContent","setHtmlContent","fetch","then","response","text","data","parser","DOMParser","doc","parseFromString","headElements","head","querySelectorAll","forEach","element","document","appendChild","cloneNode","bodyContent","body","innerHTML","scriptElements","script","newScript","createElement","src","textContent","catch","error","console","style","overflow","showCartHandler","hideCartHandler","toggleSidebar","prev","main","position","right","bottom","width","height","__html"],"sources":["C:/OtpishiAI/src/components/product/ProdList.jsx"],"sourcesContent":["import SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useEffect, useState } from 'react';\r\nimport Sidebar from '../basic/SideBar';\r\nimport Header from '../layout/Header';\r\nimport Cart from './cart/Cart';\r\nimport classes from './css/ProdList.module.css';\r\nimport Products from './products/Products';\r\n\r\nfunction ProdList() {\r\n  const [cartIsShown, setCartIsShown] = useState(false);\r\n  const [sidebarIsVisible, setSidebarIsVisible] = useState(false);\r\n  const [htmlContent, setHtmlContent] = useState('');\r\n\r\n  // 외부 HTML 파일을 가져오기 위한 useEffect\r\n  useEffect(() => {\r\n    if (sidebarIsVisible) {\r\n      fetch('/chatbot.html') // public 폴더 내 chatbot.html\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(data, 'text/html');\r\n\r\n          // 1. <head>의 스타일 태그 및 링크 태그 추출\r\n          const headElements = doc.head.querySelectorAll('style, link[rel=\"stylesheet\"]');\r\n\r\n          // 2. 추출한 스타일 요소들을 <head>에 추가\r\n          headElements.forEach((element) => {\r\n            document.head.appendChild(element.cloneNode(true));\r\n          });\r\n\r\n          // 3. <body>의 콘텐츠만 추출\r\n          const bodyContent = doc.body.innerHTML;\r\n          setHtmlContent(bodyContent);\r\n\r\n          // 4. <script> 태그 추출 및 실행\r\n          const scriptElements = doc.body.querySelectorAll('script');\r\n          scriptElements.forEach((script) => {\r\n            const newScript = document.createElement('script');\r\n            if (script.src) {\r\n              newScript.src = script.src; // 외부 스크립트일 경우 src 복사\r\n            } else {\r\n              newScript.textContent = script.textContent; // 인라인 스크립트일 경우 내용 복사\r\n            }\r\n            document.body.appendChild(newScript); // 스크립트 실행\r\n          });\r\n        })\r\n        .catch((error) => console.error('Failed to load chatbot.html:', error));\r\n    }\r\n\r\n    document.body.style.overflow = sidebarIsVisible ? 'hidden' : 'auto';\r\n\r\n    // Cleanup 함수에서 사이드바가 닫힐 때 스크롤 복원\r\n    return () => {\r\n      document.body.style.overflow = 'auto'; // 사이드바가 닫힐 때 스크롤 복원\r\n    };\r\n  }, [sidebarIsVisible]);\r\n\r\n  const showCartHandler = () => {\r\n    setCartIsShown(true);\r\n  };\r\n\r\n  const hideCartHandler = () => {\r\n    setCartIsShown(false);\r\n  };\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarIsVisible((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header cartIsShown={cartIsShown} setCartIsShown={setCartIsShown} onShowCart={showCartHandler} />\r\n      <main className={classes.main}>\r\n        <Products />\r\n      </main>\r\n\r\n      {/* 아이콘 버튼 */}\r\n      <IconButton\r\n        onClick={toggleSidebar}\r\n        sx={{\r\n          position: 'fixed',\r\n          right: '30px',\r\n          bottom: '30px',\r\n          width: '30px',\r\n          height: '30px',\r\n        }}\r\n      >\r\n        <SmartToyIcon color=\"primary\" />\r\n      </IconButton>\r\n\r\n      {/* 사이드바 모달 */}\r\n      <Sidebar\r\n        isVisible={sidebarIsVisible}\r\n        content={<div className={classes['sidebar-content']} dangerouslySetInnerHTML={{ __html: htmlContent }}></div>}\r\n        onClose={toggleSidebar}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProdList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}