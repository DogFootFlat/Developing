{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/React.createContext({loginMethod:'Naver',setLoginMethod:site=>{},currentPage:'회원 목록',setCurrentPage:page=>{},isLoggedIn:false,onLogin:()=>{},onLogout:(name,pw)=>{}});export const AuthContextProvider=props=>{const[loginMethod,setLoginMethod]=useState('Naver');const[currentPage,setCurrentPage]=useState('회원 목록');const[isLoggedIn,setIsLoggedIn]=useState(false);useEffect(()=>{const storedLoggedIn=localStorage.getItem('IsLoggedIn');if(storedLoggedIn==='1'){setIsLoggedIn(true);}});const loginHandler=()=>{localStorage.setItem('IsLoggedIn','1');setIsLoggedIn(true);};const logoutHandler=()=>{localStorage.removeItem('IsLoggedIn');setIsLoggedIn(false);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{loginMethod:loginMethod,setLoginMethod:setLoginMethod,currentPage:currentPage,setCurrentPage:setCurrentPage,isLoggedIn:isLoggedIn,onLogin:loginHandler,onLogout:logoutHandler},children:props.children});};export default AuthContext;","map":{"version":3,"names":["React","useState","useEffect","AuthContext","createContext","loginMethod","setLoginMethod","site","currentPage","setCurrentPage","page","isLoggedIn","onLogin","onLogout","name","pw","AuthContextProvider","props","setIsLoggedIn","storedLoggedIn","localStorage","getItem","loginHandler","setItem","logoutHandler","removeItem","children"],"sources":["C:/OtpishiAI/src/store/auth-context.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n\tloginMethod: 'Naver',\r\n\tsetLoginMethod: (site) => {},\r\n\tcurrentPage: '회원 목록',\r\n\tsetCurrentPage: (page) => {},\r\n\tisLoggedIn: false,\r\n\tonLogin: () => {},\r\n\tonLogout: (name, pw) => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\tconst [loginMethod, setLoginMethod] = useState('Naver');\r\n\tconst [currentPage, setCurrentPage] = useState('회원 목록');\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst storedLoggedIn = localStorage.getItem('IsLoggedIn');\r\n\t\tif (storedLoggedIn === '1') {\r\n\t\t\tsetIsLoggedIn(true);\r\n\t\t}\r\n\t});\r\n\r\n\tconst loginHandler = () => {\r\n\t\tlocalStorage.setItem('IsLoggedIn', '1');\r\n\t\tsetIsLoggedIn(true);\r\n\t};\r\n\tconst logoutHandler = () => {\r\n\t\tlocalStorage.removeItem('IsLoggedIn');\r\n\t\tsetIsLoggedIn(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tloginMethod: loginMethod,\r\n\t\t\t\tsetLoginMethod: setLoginMethod,\r\n\t\t\t\tcurrentPage: currentPage,\r\n\t\t\t\tsetCurrentPage: setCurrentPage,\r\n\t\t\t\tisLoggedIn: isLoggedIn,\r\n\t\t\t\tonLogin: loginHandler,\r\n\t\t\t\tonLogout: logoutHandler,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\nexport default AuthContext;\r\n"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,2CAEA,KAAMC,YAAW,cAAGH,KAAK,CAACI,aAAN,CAAoB,CACvCC,WAAW,CAAE,OAD0B,CAEvCC,cAAc,CAAGC,IAAD,EAAU,CAAE,CAFW,CAGvCC,WAAW,CAAE,OAH0B,CAIvCC,cAAc,CAAGC,IAAD,EAAU,CAAE,CAJW,CAKvCC,UAAU,CAAE,KAL2B,CAMvCC,OAAO,CAAE,IAAM,CAAE,CANsB,CAOvCC,QAAQ,CAAE,CAACC,IAAD,CAAOC,EAAP,GAAc,CAAE,CAPa,CAApB,CAApB,CAUA,MAAO,MAAMC,oBAAmB,CAAIC,KAAD,EAAW,CAC7C,KAAM,CAACZ,WAAD,CAAcC,cAAd,EAAgCL,QAAQ,CAAC,OAAD,CAA9C,CACA,KAAM,CAACO,WAAD,CAAcC,cAAd,EAAgCR,QAAQ,CAAC,OAAD,CAA9C,CACA,KAAM,CAACU,UAAD,CAAaO,aAAb,EAA8BjB,QAAQ,CAAC,KAAD,CAA5C,CAEAC,SAAS,CAAC,IAAM,CACf,KAAMiB,eAAc,CAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAvB,CACA,GAAIF,cAAc,GAAK,GAAvB,CAA4B,CAC3BD,aAAa,CAAC,IAAD,CAAb,CACA,CACD,CALQ,CAAT,CAOA,KAAMI,aAAY,CAAG,IAAM,CAC1BF,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAmC,GAAnC,EACAL,aAAa,CAAC,IAAD,CAAb,CACA,CAHD,CAIA,KAAMM,cAAa,CAAG,IAAM,CAC3BJ,YAAY,CAACK,UAAb,CAAwB,YAAxB,EACAP,aAAa,CAAC,KAAD,CAAb,CACA,CAHD,CAKA,mBACC,KAAC,WAAD,CAAa,QAAb,EACC,KAAK,CAAE,CACNb,WAAW,CAAEA,WADP,CAENC,cAAc,CAAEA,cAFV,CAGNE,WAAW,CAAEA,WAHP,CAINC,cAAc,CAAEA,cAJV,CAKNE,UAAU,CAAEA,UALN,CAMNC,OAAO,CAAEU,YANH,CAONT,QAAQ,CAAEW,aAPJ,CADR,UAWEP,KAAK,CAACS,QAXR,EADD,CAeA,CApCM,CAqCP,cAAevB,YAAf"},"metadata":{},"sourceType":"module"}