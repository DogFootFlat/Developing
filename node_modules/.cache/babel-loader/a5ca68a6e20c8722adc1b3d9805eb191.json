{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"size\", \"variant\", \"children\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const AvatarGroupContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  AvatarGroupContext.displayName = 'AvatarGroupContext';\n}\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, {});\n};\n\nconst AvatarGroupGroupRoot = styled('div', {\n  name: 'JoyAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  return _extends({}, ownerState.size === 'sm' && {\n    '--AvatarGroup-gap': '-0.375rem',\n    '--Avatar-ringSize': '2px'\n  }, ownerState.size === 'md' && {\n    '--AvatarGroup-gap': '-0.5rem',\n    '--Avatar-ringSize': '2px'\n  }, ownerState.size === 'lg' && {\n    '--AvatarGroup-gap': '-0.625rem',\n    '--Avatar-ringSize': '4px'\n  }, {\n    '--Avatar-ring': `0 0 0 var(--Avatar-ringSize) var(--Avatar-ringColor, ${theme.vars.palette.background.surface})`,\n    '--Avatar-marginInlineStart': 'var(--AvatarGroup-gap)',\n    display: 'flex',\n    marginInlineStart: 'calc(-1 * var(--AvatarGroup-gap))'\n  });\n});\n/**\n *\n * Demos:\n *\n * - [Avatar](https://mui.com/joy-ui/react-avatar/)\n *\n * API:\n *\n * - [AvatarGroup API](https://mui.com/joy-ui/api/avatar-group/)\n */\n\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAvatarGroup'\n  });\n\n  const {\n    className,\n    color,\n    component = 'div',\n    size = 'md',\n    variant,\n    children,\n    slots = {},\n    slotProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = React.useMemo(() => _extends({}, props, {\n    color,\n    component,\n    size,\n    variant\n  }), [color, component, props, size, variant]);\n  const classes = useUtilityClasses();\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: AvatarGroupGroupRoot,\n    externalForwardedProps: _extends({}, other, {\n      component,\n      slots,\n      slotProps\n    }),\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(AvatarGroupContext.Provider, {\n    value: ownerState,\n    children: /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * Used to render icon or text elements inside the AvatarGroup if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['lg', 'md', 'sm']), PropTypes.string]),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'soft'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","clsx","PropTypes","unstable_composeClasses","composeClasses","useThemeProps","styled","getAvatarGroupUtilityClass","useSlot","jsx","_jsx","AvatarGroupContext","createContext","undefined","process","env","NODE_ENV","displayName","useUtilityClasses","slots","root","AvatarGroupGroupRoot","name","slot","overridesResolver","props","styles","ownerState","theme","size","vars","palette","background","surface","display","marginInlineStart","AvatarGroup","forwardRef","inProps","ref","className","color","component","variant","children","slotProps","other","useMemo","classes","SlotRoot","rootProps","elementType","externalForwardedProps","Provider","value","propTypes","node","string","oneOfType","oneOf","shape","func","object","sx","arrayOf","bool"],"sources":["C:/OtpishiAI/node_modules/@mui/joy/AvatarGroup/AvatarGroup.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"size\", \"variant\", \"children\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const AvatarGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  AvatarGroupContext.displayName = 'AvatarGroupContext';\n}\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, {});\n};\nconst AvatarGroupGroupRoot = styled('div', {\n  name: 'JoyAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => _extends({}, ownerState.size === 'sm' && {\n  '--AvatarGroup-gap': '-0.375rem',\n  '--Avatar-ringSize': '2px'\n}, ownerState.size === 'md' && {\n  '--AvatarGroup-gap': '-0.5rem',\n  '--Avatar-ringSize': '2px'\n}, ownerState.size === 'lg' && {\n  '--AvatarGroup-gap': '-0.625rem',\n  '--Avatar-ringSize': '4px'\n}, {\n  '--Avatar-ring': `0 0 0 var(--Avatar-ringSize) var(--Avatar-ringColor, ${theme.vars.palette.background.surface})`,\n  '--Avatar-marginInlineStart': 'var(--AvatarGroup-gap)',\n  display: 'flex',\n  marginInlineStart: 'calc(-1 * var(--AvatarGroup-gap))'\n}));\n\n/**\n *\n * Demos:\n *\n * - [Avatar](https://mui.com/joy-ui/react-avatar/)\n *\n * API:\n *\n * - [AvatarGroup API](https://mui.com/joy-ui/api/avatar-group/)\n */\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAvatarGroup'\n  });\n  const {\n      className,\n      color,\n      component = 'div',\n      size = 'md',\n      variant,\n      children,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = React.useMemo(() => _extends({}, props, {\n    color,\n    component,\n    size,\n    variant\n  }), [color, component, props, size, variant]);\n  const classes = useUtilityClasses();\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: AvatarGroupGroupRoot,\n    externalForwardedProps: _extends({}, other, {\n      component,\n      slots,\n      slotProps\n    }),\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(AvatarGroupContext.Provider, {\n    value: ownerState,\n    children: /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used to render icon or text elements inside the AvatarGroup if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['lg', 'md', 'sm']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'soft'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"],"mappings":"AAAA;;AAEA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,MAAMC,SAAS,GAAG,CAAC,WAAD,EAAc,OAAd,EAAuB,WAAvB,EAAoC,MAApC,EAA4C,SAA5C,EAAuD,UAAvD,EAAmE,OAAnE,EAA4E,WAA5E,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,WAA1D;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,0BAAT,QAA2C,sBAA3C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,MAAMC,kBAAkB,GAAG,aAAaX,KAAK,CAACY,aAAN,CAAoBC,SAApB,CAAxC;;AACP,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzCL,kBAAkB,CAACM,WAAnB,GAAiC,oBAAjC;AACD;;AACD,MAAMC,iBAAiB,GAAG,MAAM;EAC9B,MAAMC,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAD;EADM,CAAd;EAGA,OAAOhB,cAAc,CAACe,KAAD,EAAQZ,0BAAR,EAAoC,EAApC,CAArB;AACD,CALD;;AAMA,MAAMc,oBAAoB,GAAGf,MAAM,CAAC,KAAD,EAAQ;EACzCgB,IAAI,EAAE,gBADmC;EAEzCC,IAAI,EAAE,MAFmC;EAGzCC,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACN;AAHJ,CAAR,CAAN,CAI1B;EAAA,IAAC;IACFO,UADE;IAEFC;EAFE,CAAD;EAAA,OAGG9B,QAAQ,CAAC,EAAD,EAAK6B,UAAU,CAACE,IAAX,KAAoB,IAApB,IAA4B;IAC7C,qBAAqB,WADwB;IAE7C,qBAAqB;EAFwB,CAAjC,EAGXF,UAAU,CAACE,IAAX,KAAoB,IAApB,IAA4B;IAC7B,qBAAqB,SADQ;IAE7B,qBAAqB;EAFQ,CAHjB,EAMXF,UAAU,CAACE,IAAX,KAAoB,IAApB,IAA4B;IAC7B,qBAAqB,WADQ;IAE7B,qBAAqB;EAFQ,CANjB,EASX;IACD,iBAAkB,wDAAuDD,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAmBC,UAAnB,CAA8BC,OAAQ,GAD9G;IAED,8BAA8B,wBAF7B;IAGDC,OAAO,EAAE,MAHR;IAIDC,iBAAiB,EAAE;EAJlB,CATW,CAHX;AAAA,CAJ0B,CAA7B;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,aAAapC,KAAK,CAACqC,UAAN,CAAiB,SAASD,WAAT,CAAqBE,OAArB,EAA8BC,GAA9B,EAAmC;EACnF,MAAMd,KAAK,GAAGpB,aAAa,CAAC;IAC1BoB,KAAK,EAAEa,OADmB;IAE1BhB,IAAI,EAAE;EAFoB,CAAD,CAA3B;;EAIA,MAAM;IACFkB,SADE;IAEFC,KAFE;IAGFC,SAAS,GAAG,KAHV;IAIFb,IAAI,GAAG,IAJL;IAKFc,OALE;IAMFC,QANE;IAOFzB,KAAK,GAAG,EAPN;IAQF0B,SAAS,GAAG;EARV,IASApB,KATN;EAAA,MAUEqB,KAAK,GAAGjD,6BAA6B,CAAC4B,KAAD,EAAQ1B,SAAR,CAVvC;;EAWA,MAAM4B,UAAU,GAAG3B,KAAK,CAAC+C,OAAN,CAAc,MAAMjD,QAAQ,CAAC,EAAD,EAAK2B,KAAL,EAAY;IACzDgB,KADyD;IAEzDC,SAFyD;IAGzDb,IAHyD;IAIzDc;EAJyD,CAAZ,CAA5B,EAKf,CAACF,KAAD,EAAQC,SAAR,EAAmBjB,KAAnB,EAA0BI,IAA1B,EAAgCc,OAAhC,CALe,CAAnB;EAMA,MAAMK,OAAO,GAAG9B,iBAAiB,EAAjC;EACA,MAAM,CAAC+B,QAAD,EAAWC,SAAX,IAAwB1C,OAAO,CAAC,MAAD,EAAS;IAC5C+B,GAD4C;IAE5CC,SAAS,EAAEvC,IAAI,CAAC+C,OAAO,CAAC5B,IAAT,EAAeoB,SAAf,CAF6B;IAG5CW,WAAW,EAAE9B,oBAH+B;IAI5C+B,sBAAsB,EAAEtD,QAAQ,CAAC,EAAD,EAAKgD,KAAL,EAAY;MAC1CJ,SAD0C;MAE1CvB,KAF0C;MAG1C0B;IAH0C,CAAZ,CAJY;IAS5ClB;EAT4C,CAAT,CAArC;EAWA,OAAO,aAAajB,IAAI,CAACC,kBAAkB,CAAC0C,QAApB,EAA8B;IACpDC,KAAK,EAAE3B,UAD6C;IAEpDiB,QAAQ,EAAE,aAAalC,IAAI,CAACuC,QAAD,EAAWnD,QAAQ,CAAC,EAAD,EAAKoD,SAAL,EAAgB;MAC5DN,QAAQ,EAAEA;IADkD,CAAhB,CAAnB;EAFyB,CAA9B,CAAxB;AAMD,CAxCgC,CAAjC;AAyCA9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCoB,WAAW,CAACmB;AAAU;AAAtB,EAA+C;EACrF;EACA;EACA;EACA;;EACA;AACF;AACA;AACA;EACEX,QAAQ,EAAE1C,SAAS,CAACsD,IATiE;;EAUrF;AACF;AACA;EACEhB,SAAS,EAAEtC,SAAS,CAACuD,MAbgE;;EAcrF;AACF;AACA;AACA;EACEhB,KAAK,EAAEvC;EAAU;EAAD,CAAuCwD,SAAhD,CAA0D,CAACxD,SAAS,CAACyD,KAAV,CAAgB,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,SAAjC,EAA4C,SAA5C,CAAhB,CAAD,EAA0EzD,SAAS,CAACuD,MAApF,CAA1D,CAlB8E;;EAmBrF;AACF;AACA;AACA;EACEf,SAAS,EAAExC,SAAS,CAACiD,WAvBgE;;EAwBrF;AACF;AACA;AACA;AACA;EACEtB,IAAI,EAAE3B;EAAU;EAAD,CAAuCwD,SAAhD,CAA0D,CAACxD,SAAS,CAACyD,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAhB,CAAD,EAAsCzD,SAAS,CAACuD,MAAhD,CAA1D,CA7B+E;;EA8BrF;AACF;AACA;AACA;EACEZ,SAAS,EAAE3C,SAAS,CAAC0D,KAAV,CAAgB;IACzBxC,IAAI,EAAElB,SAAS,CAACwD,SAAV,CAAoB,CAACxD,SAAS,CAAC2D,IAAX,EAAiB3D,SAAS,CAAC4D,MAA3B,CAApB;EADmB,CAAhB,CAlC0E;;EAqCrF;AACF;AACA;AACA;EACE3C,KAAK,EAAEjB,SAAS,CAAC0D,KAAV,CAAgB;IACrBxC,IAAI,EAAElB,SAAS,CAACiD;EADK,CAAhB,CAzC8E;;EA4CrF;AACF;AACA;EACEY,EAAE,EAAE7D,SAAS,CAACwD,SAAV,CAAoB,CAACxD,SAAS,CAAC8D,OAAV,CAAkB9D,SAAS,CAACwD,SAAV,CAAoB,CAACxD,SAAS,CAAC2D,IAAX,EAAiB3D,SAAS,CAAC4D,MAA3B,EAAmC5D,SAAS,CAAC+D,IAA7C,CAApB,CAAlB,CAAD,EAA6F/D,SAAS,CAAC2D,IAAvG,EAA6G3D,SAAS,CAAC4D,MAAvH,CAApB,CA/CiF;;EAgDrF;AACF;AACA;AACA;EACEnB,OAAO,EAAEzC;EAAU;EAAD,CAAuCwD,SAAhD,CAA0D,CAACxD,SAAS,CAACyD,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,EAAsB,MAAtB,EAA8B,OAA9B,CAAhB,CAAD,EAA0DzD,SAAS,CAACuD,MAApE,CAA1D;AApD4E,CAAvF,GAqDI,KAAK,CArDT;AAsDA,eAAerB,WAAf"},"metadata":{},"sourceType":"module"}