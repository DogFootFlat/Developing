{"ast":null,"code":"'use client';\n\nimport { createContainer } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { useThemeProps } from '../styles';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'JoyContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'JoyContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","map":{"version":3,"names":["createContainer","PropTypes","styled","useThemeProps","Container","createStyledComponent","name","slot","overridesResolver","props","styles","root","inProps","process","env","NODE_ENV","propTypes","children","node","component","elementType","disableGutters","bool","fixed","maxWidth","oneOfType","oneOf","string","sx","arrayOf","func","object"],"sources":["C:/OtpishiAI/node_modules/@mui/joy/Container/Container.js"],"sourcesContent":["'use client';\n\nimport { createContainer } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { useThemeProps } from '../styles';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'JoyContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'JoyContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"mappings":"AAAA;;AAEA,SAASA,eAAT,QAAgC,aAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,MAAMC,SAAS,GAAGJ,eAAe,CAAC;EAChCK,qBAAqB,EAAEH,MAAM,CAAC,KAAD,EAAQ;IACnCI,IAAI,EAAE,cAD6B;IAEnCC,IAAI,EAAE,MAF6B;IAGnCC,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;EAHV,CAAR,CADG;EAMhCR,aAAa,EAAES,OAAO,IAAIT,aAAa,CAAC;IACtCM,KAAK,EAAEG,OAD+B;IAEtCN,IAAI,EAAE;EAFgC,CAAD;AANP,CAAD,CAAjC;AAWAO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,SAAS,CAACY;AAAU;AAApB,EAA6C;EACnF;EACA;EACA;EACA;;EACA;AACF;AACA;EACEC,QAAQ,EAAEhB,SAAS,CAACiB,IAR+D;;EASnF;AACF;AACA;AACA;EACEC,SAAS,EAAElB,SAAS,CAACmB,WAb8D;;EAcnF;AACF;AACA;AACA;EACEC,cAAc,EAAEpB,SAAS,CAACqB,IAlByD;;EAmBnF;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAEtB,SAAS,CAACqB,IA1BkE;;EA2BnF;AACF;AACA;AACA;AACA;AACA;EACEE,QAAQ,EAAEvB;EAAU;EAAD,CAAuCwB,SAAhD,CAA0D,CAACxB,SAAS,CAACyB,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,KAA/B,CAAhB,CAAD,EAAyDzB,SAAS,CAAC0B,MAAnE,CAA1D,CAjCyE;;EAkCnF;AACF;AACA;EACEC,EAAE,EAAE3B,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAAC6B,IAAX,EAAiB7B,SAAS,CAAC8B,MAA3B,EAAmC9B,SAAS,CAACqB,IAA7C,CAApB,CAAlB,CAAD,EAA6FrB,SAAS,CAAC6B,IAAvG,EAA6G7B,SAAS,CAAC8B,MAAvH,CAApB;AArC+E,CAArF,GAsCI,KAAK,CAtCT;AAuCA,eAAe3B,SAAf"},"metadata":{},"sourceType":"module"}