{"ast":null,"code":"var _jsxFileName = \"C:\\\\OtpishiAI\\\\src\\\\components\\\\product\\\\products\\\\productForm\\\\ProductForm.js\";\nimport React from 'react';\nimport ProductFilter from './ProductFilter';\nimport ProductFilters from './ProductFilters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = _ref => {\n  let {\n    fetchProducts,\n    renderItems\n  } = _ref;\n\n  const onChangeHandler = (id, value) => {\n    const queryArray = [];\n\n    switch (id) {\n      case 'genre':\n        queryArray.push(`genre=${value}`);\n        break;\n\n      case 'brand':\n        queryArray.push(`brand=${value}`);\n        break;\n    }\n\n    fetchProducts(queryArray.join('&')); // 쿼리 문자열을 보내기\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderItems.map(renderItem => {\n      var _renderItem$items;\n\n      return ((_renderItem$items = renderItem.items) === null || _renderItem$items === void 0 ? void 0 : _renderItem$items.length) <= 1 ? /*#__PURE__*/_jsxDEV(ProductFilter, {\n        id: renderItem.id,\n        items: renderItem.items,\n        onChange: onChangeHandler\n      }, renderItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ProductFilters, {\n        id: renderItem.id,\n        items: renderItem.items,\n        onChange: onChangeHandler\n      }, renderItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","ProductFilter","ProductFilters","ProductForm","fetchProducts","renderItems","onChangeHandler","id","value","queryArray","push","join","map","renderItem","items","length"],"sources":["C:/OtpishiAI/src/components/product/products/productForm/ProductForm.js"],"sourcesContent":["import React from 'react';\r\nimport ProductFilter from './ProductFilter';\r\nimport ProductFilters from './ProductFilters';\r\n\r\nconst ProductForm = ({ fetchProducts, renderItems }) => {\r\n  const onChangeHandler = (id, value) => {\r\n    const queryArray = [];\r\n    switch (id) {\r\n      case 'genre':\r\n        queryArray.push(`genre=${value}`);\r\n        break;\r\n      case 'brand':\r\n        queryArray.push(`brand=${value}`);\r\n        break;\r\n    }\r\n    fetchProducts(queryArray.join('&')); // 쿼리 문자열을 보내기\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderItems.map((renderItem) =>\r\n        renderItem.items?.length <= 1 ? (\r\n          <ProductFilter id={renderItem.id} key={renderItem.id} items={renderItem.items} onChange={onChangeHandler} />\r\n        ) : (\r\n          <ProductFilters id={renderItem.id} key={renderItem.id} items={renderItem.items} onChange={onChangeHandler} />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,WAAW,GAAG,QAAoC;EAAA,IAAnC;IAAEC,aAAF;IAAiBC;EAAjB,CAAmC;;EACtD,MAAMC,eAAe,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;IACrC,MAAMC,UAAU,GAAG,EAAnB;;IACA,QAAQF,EAAR;MACE,KAAK,OAAL;QACEE,UAAU,CAACC,IAAX,CAAiB,SAAQF,KAAM,EAA/B;QACA;;MACF,KAAK,OAAL;QACEC,UAAU,CAACC,IAAX,CAAiB,SAAQF,KAAM,EAA/B;QACA;IANJ;;IAQAJ,aAAa,CAACK,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAAD,CAAb,CAVqC,CAUA;EACtC,CAXD;;EAaA,oBACE;IAAA,UACGN,WAAW,CAACO,GAAZ,CAAiBC,UAAD;MAAA;;MAAA,OACf,sBAAAA,UAAU,CAACC,KAAX,wEAAkBC,MAAlB,KAA4B,CAA5B,gBACE,QAAC,aAAD;QAAe,EAAE,EAAEF,UAAU,CAACN,EAA9B;QAAsD,KAAK,EAAEM,UAAU,CAACC,KAAxE;QAA+E,QAAQ,EAAER;MAAzF,GAAuCO,UAAU,CAACN,EAAlD;QAAA;QAAA;QAAA;MAAA,QADF,gBAGE,QAAC,cAAD;QAAgB,EAAE,EAAEM,UAAU,CAACN,EAA/B;QAAuD,KAAK,EAAEM,UAAU,CAACC,KAAzE;QAAgF,QAAQ,EAAER;MAA1F,GAAwCO,UAAU,CAACN,EAAnD;QAAA;QAAA;QAAA;MAAA,QAJa;IAAA,CAAhB;EADH,iBADF;AAWD,CAzBD;;KAAMJ,W;AA2BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}