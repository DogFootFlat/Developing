{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { moveHighlight, listReducer, ListActionTypes, handleItemSelection } from '../useList';\nimport { SelectActionTypes } from './useSelect.types';\nexport function selectReducer(state, action) {\n  const {\n    open\n  } = state;\n  const {\n    context: {\n      selectionMode\n    }\n  } = action;\n\n  if (action.type === SelectActionTypes.buttonClick) {\n    const itemToHighlight = state.selectedValues[0] ?? moveHighlight(null, 'start', action.context);\n    return _extends({}, state, {\n      open: !open,\n      highlightedValue: !open ? itemToHighlight : null\n    });\n  }\n\n  if (action.type === SelectActionTypes.browserAutoFill) {\n    return handleItemSelection(action.item, state, action.context);\n  }\n\n  const newState = listReducer(state, action);\n\n  switch (action.type) {\n    case ListActionTypes.keyDown:\n      if (state.open) {\n        if (action.event.key === 'Escape') {\n          return _extends({}, newState, {\n            open: false\n          });\n        }\n      } else {\n        if (action.event.key === 'ArrowDown') {\n          return _extends({}, state, {\n            open: true,\n            highlightedValue: state.selectedValues[0] ?? moveHighlight(null, 'start', action.context)\n          });\n        }\n\n        if (action.event.key === 'ArrowUp') {\n          return _extends({}, state, {\n            open: true,\n            highlightedValue: state.selectedValues[0] ?? moveHighlight(null, 'end', action.context)\n          });\n        }\n      }\n\n      break;\n\n    case ListActionTypes.itemClick:\n      if (selectionMode === 'single') {\n        return _extends({}, newState, {\n          open: false\n        });\n      }\n\n      break;\n\n    case ListActionTypes.blur:\n      return _extends({}, newState, {\n        open: false\n      });\n\n    default:\n      return newState;\n  }\n\n  return newState;\n}","map":{"version":3,"names":["_extends","moveHighlight","listReducer","ListActionTypes","handleItemSelection","SelectActionTypes","selectReducer","state","action","open","context","selectionMode","type","buttonClick","itemToHighlight","selectedValues","highlightedValue","browserAutoFill","item","newState","keyDown","event","key","itemClick","blur"],"sources":["C:/OtpishiAI/node_modules/@mui/joy/node_modules/@mui/base/useSelect/selectReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { moveHighlight, listReducer, ListActionTypes, handleItemSelection } from '../useList';\nimport { SelectActionTypes } from './useSelect.types';\nexport function selectReducer(state, action) {\n  const {\n    open\n  } = state;\n  const {\n    context: {\n      selectionMode\n    }\n  } = action;\n  if (action.type === SelectActionTypes.buttonClick) {\n    const itemToHighlight = state.selectedValues[0] ?? moveHighlight(null, 'start', action.context);\n    return _extends({}, state, {\n      open: !open,\n      highlightedValue: !open ? itemToHighlight : null\n    });\n  }\n  if (action.type === SelectActionTypes.browserAutoFill) {\n    return handleItemSelection(action.item, state, action.context);\n  }\n  const newState = listReducer(state, action);\n  switch (action.type) {\n    case ListActionTypes.keyDown:\n      if (state.open) {\n        if (action.event.key === 'Escape') {\n          return _extends({}, newState, {\n            open: false\n          });\n        }\n      } else {\n        if (action.event.key === 'ArrowDown') {\n          return _extends({}, state, {\n            open: true,\n            highlightedValue: state.selectedValues[0] ?? moveHighlight(null, 'start', action.context)\n          });\n        }\n        if (action.event.key === 'ArrowUp') {\n          return _extends({}, state, {\n            open: true,\n            highlightedValue: state.selectedValues[0] ?? moveHighlight(null, 'end', action.context)\n          });\n        }\n      }\n      break;\n    case ListActionTypes.itemClick:\n      if (selectionMode === 'single') {\n        return _extends({}, newState, {\n          open: false\n        });\n      }\n      break;\n    case ListActionTypes.blur:\n      return _extends({}, newState, {\n        open: false\n      });\n    default:\n      return newState;\n  }\n  return newState;\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,eAArC,EAAsDC,mBAAtD,QAAiF,YAAjF;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;EAC3C,MAAM;IACJC;EADI,IAEFF,KAFJ;EAGA,MAAM;IACJG,OAAO,EAAE;MACPC;IADO;EADL,IAIFH,MAJJ;;EAKA,IAAIA,MAAM,CAACI,IAAP,KAAgBP,iBAAiB,CAACQ,WAAtC,EAAmD;IACjD,MAAMC,eAAe,GAAGP,KAAK,CAACQ,cAAN,CAAqB,CAArB,KAA2Bd,aAAa,CAAC,IAAD,EAAO,OAAP,EAAgBO,MAAM,CAACE,OAAvB,CAAhE;IACA,OAAOV,QAAQ,CAAC,EAAD,EAAKO,KAAL,EAAY;MACzBE,IAAI,EAAE,CAACA,IADkB;MAEzBO,gBAAgB,EAAE,CAACP,IAAD,GAAQK,eAAR,GAA0B;IAFnB,CAAZ,CAAf;EAID;;EACD,IAAIN,MAAM,CAACI,IAAP,KAAgBP,iBAAiB,CAACY,eAAtC,EAAuD;IACrD,OAAOb,mBAAmB,CAACI,MAAM,CAACU,IAAR,EAAcX,KAAd,EAAqBC,MAAM,CAACE,OAA5B,CAA1B;EACD;;EACD,MAAMS,QAAQ,GAAGjB,WAAW,CAACK,KAAD,EAAQC,MAAR,CAA5B;;EACA,QAAQA,MAAM,CAACI,IAAf;IACE,KAAKT,eAAe,CAACiB,OAArB;MACE,IAAIb,KAAK,CAACE,IAAV,EAAgB;QACd,IAAID,MAAM,CAACa,KAAP,CAAaC,GAAb,KAAqB,QAAzB,EAAmC;UACjC,OAAOtB,QAAQ,CAAC,EAAD,EAAKmB,QAAL,EAAe;YAC5BV,IAAI,EAAE;UADsB,CAAf,CAAf;QAGD;MACF,CAND,MAMO;QACL,IAAID,MAAM,CAACa,KAAP,CAAaC,GAAb,KAAqB,WAAzB,EAAsC;UACpC,OAAOtB,QAAQ,CAAC,EAAD,EAAKO,KAAL,EAAY;YACzBE,IAAI,EAAE,IADmB;YAEzBO,gBAAgB,EAAET,KAAK,CAACQ,cAAN,CAAqB,CAArB,KAA2Bd,aAAa,CAAC,IAAD,EAAO,OAAP,EAAgBO,MAAM,CAACE,OAAvB;UAFjC,CAAZ,CAAf;QAID;;QACD,IAAIF,MAAM,CAACa,KAAP,CAAaC,GAAb,KAAqB,SAAzB,EAAoC;UAClC,OAAOtB,QAAQ,CAAC,EAAD,EAAKO,KAAL,EAAY;YACzBE,IAAI,EAAE,IADmB;YAEzBO,gBAAgB,EAAET,KAAK,CAACQ,cAAN,CAAqB,CAArB,KAA2Bd,aAAa,CAAC,IAAD,EAAO,KAAP,EAAcO,MAAM,CAACE,OAArB;UAFjC,CAAZ,CAAf;QAID;MACF;;MACD;;IACF,KAAKP,eAAe,CAACoB,SAArB;MACE,IAAIZ,aAAa,KAAK,QAAtB,EAAgC;QAC9B,OAAOX,QAAQ,CAAC,EAAD,EAAKmB,QAAL,EAAe;UAC5BV,IAAI,EAAE;QADsB,CAAf,CAAf;MAGD;;MACD;;IACF,KAAKN,eAAe,CAACqB,IAArB;MACE,OAAOxB,QAAQ,CAAC,EAAD,EAAKmB,QAAL,EAAe;QAC5BV,IAAI,EAAE;MADsB,CAAf,CAAf;;IAGF;MACE,OAAOU,QAAP;EAnCJ;;EAqCA,OAAOA,QAAP;AACD"},"metadata":{},"sourceType":"module"}