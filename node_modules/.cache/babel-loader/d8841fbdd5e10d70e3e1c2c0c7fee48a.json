{"ast":null,"code":"var _jsxFileName = \"C:\\\\OtpishiAI\\\\src\\\\components\\\\mypage\\\\Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './css/Reviews.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reviews = () => {\n  _s();\n\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    // Replace this with the actual API call or data fetch\n    const fetchReviews = async () => {\n      // Simulate a fetch call\n      const dummyReviews = [{\n        id: 1,\n        title: 'Great product!',\n        content: 'I absolutely loved this item. Highly recommended!',\n        date: '2024-10-10'\n      }, {\n        id: 2,\n        title: 'Not bad',\n        content: 'It was okay, but I had higher expectations.',\n        date: '2024-09-21'\n      }];\n      setReviews(dummyReviews);\n    };\n\n    fetchReviews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.reviews,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB0B4 \\uB9AC\\uBDF0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), reviews.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.reviewList,\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.reviewItem,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.reviewTitle,\n          children: review.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.reviewContent,\n          children: review.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.reviewDate,\n          children: review.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC544\\uC9C1 \\uC791\\uC131\\uB41C \\uB9AC\\uBDF0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reviews, \"FPrwLLWcZBXrtWYcIRYMKBd2Ocw=\");\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["React","useState","useEffect","classes","Reviews","reviews","setReviews","fetchReviews","dummyReviews","id","title","content","date","length","reviewList","map","review","reviewItem","reviewTitle","reviewContent","reviewDate"],"sources":["C:/OtpishiAI/src/components/mypage/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport classes from './css/Reviews.module.css';\r\n\r\nconst Reviews = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace this with the actual API call or data fetch\r\n    const fetchReviews = async () => {\r\n      // Simulate a fetch call\r\n      const dummyReviews = [\r\n        {\r\n          id: 1,\r\n          title: 'Great product!',\r\n          content: 'I absolutely loved this item. Highly recommended!',\r\n          date: '2024-10-10',\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Not bad',\r\n          content: 'It was okay, but I had higher expectations.',\r\n          date: '2024-09-21',\r\n        },\r\n      ];\r\n      setReviews(dummyReviews);\r\n    };\r\n    \r\n    fetchReviews();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.reviews}>\r\n      <h2>내 리뷰</h2>\r\n      {reviews.length > 0 ? (\r\n        <ul className={classes.reviewList}>\r\n          {reviews.map((review) => (\r\n            <li key={review.id} className={classes.reviewItem}>\r\n              <h3 className={classes.reviewTitle}>{review.title}</h3>\r\n              <p className={classes.reviewContent}>{review.content}</p>\r\n              <span className={classes.reviewDate}>{review.date}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>아직 작성된 리뷰가 없습니다.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,YAAY,GAAG,YAAY;MAC/B;MACA,MAAMC,YAAY,GAAG,CACnB;QACEC,EAAE,EAAE,CADN;QAEEC,KAAK,EAAE,gBAFT;QAGEC,OAAO,EAAE,mDAHX;QAIEC,IAAI,EAAE;MAJR,CADmB,EAOnB;QACEH,EAAE,EAAE,CADN;QAEEC,KAAK,EAAE,SAFT;QAGEC,OAAO,EAAE,6CAHX;QAIEC,IAAI,EAAE;MAJR,CAPmB,CAArB;MAcAN,UAAU,CAACE,YAAD,CAAV;IACD,CAjBD;;IAmBAD,YAAY;EACb,CAtBQ,EAsBN,EAtBM,CAAT;EAwBA,oBACE;IAAK,SAAS,EAAEJ,OAAO,CAACE,OAAxB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGA,OAAO,CAACQ,MAAR,GAAiB,CAAjB,gBACC;MAAI,SAAS,EAAEV,OAAO,CAACW,UAAvB;MAAA,UACGT,OAAO,CAACU,GAAR,CAAaC,MAAD,iBACX;QAAoB,SAAS,EAAEb,OAAO,CAACc,UAAvC;QAAA,wBACE;UAAI,SAAS,EAAEd,OAAO,CAACe,WAAvB;UAAA,UAAqCF,MAAM,CAACN;QAA5C;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAG,SAAS,EAAEP,OAAO,CAACgB,aAAtB;UAAA,UAAsCH,MAAM,CAACL;QAA7C;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAM,SAAS,EAAER,OAAO,CAACiB,UAAzB;UAAA,UAAsCJ,MAAM,CAACJ;QAA7C;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA,GAASI,MAAM,CAACP,EAAhB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADD,gBAWC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA7CD;;GAAML,O;;KAAAA,O;AA+CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}